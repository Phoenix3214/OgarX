(function(){function s(l,e,r){function t(o,i){if(!e[o]){if(!l[o]){var f="function"==typeof require&&require;if(!i&&f)return f(o,!0);if(n)return n(o,!0);var d=new Error("Cannot find module '"+o+"'");throw d.code="MODULE_NOT_FOUND",d}var a=e[o]={exports:{}};l[o][0].call(a.exports,function(e){var r=l[o][1][e];return t(r||e)},a,a.exports,s,l,e,r)}return e[o].exports}for(var n="function"==typeof require&&require,a=0;a<r.length;a++)t(r[a]);return t}return s})()({1:[function(e,r){'use strict';function t(e){console&&console.warn&&console.warn(e)}function a(){a.init.call(this)}function n(e){if("function"!=typeof e)throw new TypeError("The \"listener\" argument must be of type Function. Received type "+typeof e)}function s(e){return void 0===e._maxListeners?a.defaultMaxListeners:e._maxListeners}function o(e,r,a,o){var f,i,l;if(n(a),i=e._events,void 0===i?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit("newListener",r,a.listener?a.listener:a),i=e._events),l=i[r]),void 0===l)l=i[r]=a,++e._eventsCount;else if("function"==typeof l?l=i[r]=o?[a,l]:[l,a]:o?l.unshift(a):l.push(a),f=s(e),0<f&&l.length>f&&!l.warned){l.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+l.length+" "+(r+" listeners added. Use emitter.setMaxListeners() to increase limit"));d.name="MaxListenersExceededWarning",d.emitter=e,d.type=r,d.count=l.length,t(d)}return e}function f(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function i(e,r,t){var a={fired:!1,wrapFn:void 0,target:e,type:r,listener:t},n=f.bind(a);return n.listener=t,a.wrapFn=n,n}function l(e,r,t){var a=e._events;if(a===void 0)return[];var n=a[r];return void 0===n?[]:"function"==typeof n?t?[n.listener||n]:[n]:t?_(n):u(n,n.length)}function d(e){var r=this._events;if(r!==void 0){var t=r[e];if("function"==typeof t)return 1;if(void 0!==t)return t.length}return 0}function u(e,r){for(var t=Array(r),a=0;a<r;++a)t[a]=e[a];return t}function E(e,r){for(;r+1<e.length;r++)e[r]=e[r+1];e.pop()}function _(e){for(var r=Array(e.length),t=0;t<r.length;++t)r[t]=e[t].listener||e[t];return r}var T,p="object"==typeof Reflect?Reflect:null,R=p&&"function"==typeof p.apply?p.apply:function(e,r,t){return Function.prototype.apply.call(e,r,t)};T=p&&"function"==typeof p.ownKeys?p.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var m=Number.isNaN||function(e){return e!==e};r.exports=a,r.exports.once=function(e,r){return new Promise(function(t,a){function n(){s!==void 0&&e.removeListener("error",s),t([].slice.call(arguments))}var s;"error"!==r&&(s=function(t){e.removeListener(r,n),a(t)},e.once("error",s)),e.once(r,n)})},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var c=10;Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return c},set:function(e){if("number"!=typeof e||0>e||m(e))throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received "+e+".");c=e}}),a.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(e){if("number"!=typeof e||0>e||m(e))throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received "+e+".");return this._maxListeners=e,this},a.prototype.getMaxListeners=function(){return s(this)},a.prototype.emit=function(e){for(var r=[],t=1;t<arguments.length;t++)r.push(arguments[t]);var a="error"===e,n=this._events;if(n!==void 0)a=a&&n.error===void 0;else if(!a)return!1;if(a){var s;if(0<r.length&&(s=r[0]),s instanceof Error)throw s;var o=new Error("Unhandled error."+(s?" ("+s.message+")":""));throw o.context=s,o}var f=n[e];if(f===void 0)return!1;if("function"==typeof f)R(f,this,r);else for(var l=f.length,d=u(f,l),t=0;t<l;++t)R(d[t],this,r);return!0},a.prototype.addListener=function(e,r){return o(this,e,r,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(e,r){return o(this,e,r,!0)},a.prototype.once=function(e,r){return n(r),this.on(e,i(this,e,r)),this},a.prototype.prependOnceListener=function(e,r){return n(r),this.prependListener(e,i(this,e,r)),this},a.prototype.removeListener=function(e,r){var t,a,s,o,f;if(n(r),a=this._events,void 0===a)return this;if(t=a[e],void 0===t)return this;if(t===r||t.listener===r)0==--this._eventsCount?this._events=Object.create(null):(delete a[e],a.removeListener&&this.emit("removeListener",e,t.listener||r));else if("function"!=typeof t){for(s=-1,o=t.length-1;0<=o;o--)if(t[o]===r||t[o].listener===r){f=t[o].listener,s=o;break}if(0>s)return this;0===s?t.shift():E(t,s),1===t.length&&(a[e]=t[0]),void 0!==a.removeListener&&this.emit("removeListener",e,f||r)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(e){var r,t,a;if(t=this._events,void 0===t)return this;if(void 0===t.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==t[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete t[e]),this;if(0===arguments.length){var n,s=Object.keys(t);for(a=0;a<s.length;++a)n=s[a],"removeListener"!==n&&this.removeAllListeners(n);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=t[e],"function"==typeof r)this.removeListener(e,r);else if(void 0!==r)for(a=r.length-1;0<=a;a--)this.removeListener(e,r[a]);return this},a.prototype.listeners=function(e){return l(this,e,!0)},a.prototype.rawListeners=function(e){return l(this,e,!1)},a.listenerCount=function(e,r){return"function"==typeof e.listenerCount?e.listenerCount(r):d.call(e,r)},a.prototype.listenerCount=d,a.prototype.eventNames=function(){return 0<this._eventsCount?T(this._events):[]}},{}],2:[function(e,r){var t=String.fromCharCode;r.exports=class{constructor(e,r=!0){this.view=e,this.offset=0,this.le=r}get length(){return this.view.byteLength}readUInt8(){return this.view.getUint8(this.offset++)}readInt8(){return this.view.getInt8(this.offset++)}readUInt16(){const e=this.view.getUint16(this.offset,this.le);return this.offset+=2,e}readInt16(){const e=this.view.getUint16(this.offset,this.le);return this.offset+=2,e}readUInt32(){const e=this.view.getUint32(this.offset,this.le);return this.offset+=4,e}readInt32(){const e=this.view.getInt32(this.offset,this.le);return this.offset+=4,e}readFloat32(){const e=this.view.getFloat32(this.offset,this.le);return this.offset+=4,e}readFloat64(){const e=this.view.getFloat64(this.offset,this.le);return this.offset+=8,e}skip(e){this.offset+=e}readUTF8String(){const e=[];for(;this.offset<this.view.byteLength;){const r=this.readUInt8();if(!r)break;e.push(t(r))}return e.join("")}readUTF16String(){const e=[];for(;this.offset<this.view.byteLength;){const r=this.readUInt16();if(!r)break;e.push(t(r))}return e.join("")}}},{}],3:[function(e,r){const t=new DataView(new ArrayBuffer(1048576));r.exports=class{constructor(e=!0){this.offset=0,this.le=e}writeUInt8(e){t.setUint8(this.offset++,e)}writeInt8(e){t.setInt8(this.offset++,e)}writeUInt16(e){t.setUint16(this.offset,e,this.le),this.offset+=2}writeInt16(e){t.setInt16(this.offset,e,this.le),this.offset+=2}writeUInt32(e){t.setUint32(this.offset,e,this.le),this.offset+=4}writeInt32(e){t.setInt32(this.offset,e,this.le),this.offset+=4}writeFloat32(e){t.setFloat32(this.offset,e,this.le),this.offset+=4}writeFloat64(e){t.setFloat64(this.offset,e,this.le),this.offset+=8}writeUTF8String(e){for(let r=0;r<e.length;r++)this.writeUInt8(e.charCodeAt(r));this.writeUInt8(0)}writeUTF16String(e){for(let r=0;r<e.length;r++)this.writeUInt16(e.charCodeAt(r));this.writeUInt16(0)}finalize(){return t.buffer.slice(0,this.offset)}}},{}],4:[function(e,r){r.exports=class{constructor(e){this.port=e,this.readyState=WebSocket.CONNECTING,e.onmessage=r=>{const{data:e}=r;"message"===e.event?this.onmessage({data:e.message}):"error"===e.event?this.onerror({message:e.message}):"close"===e.event?this.onclose({code:e.code,reason:e.reason}):"open"===e.event&&(this.readyState=WebSocket.OPEN,this.onopen())},e.start(),this.onopen=this.onmessage=this.onerror=this.onclose=()=>{}}send(e){this.port.postMessage({event:"message",message:e},[e])}close(){this.port.postMessage({event:"close",code:1001,message:"Client closed connection"}),this.port.close(),this.readyState=WebSocket.CLOSED}}},{}],5:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(12):e=new ArrayBuffer(12)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get x(){return Atomics.load(this.buffer,0)}set x(e){Atomics.store(this.buffer,0,e)}get y(){return Atomics.load(this.buffer,1)}set y(e){Atomics.store(this.buffer,1,e)}get scroll(){return Atomics.load(this.buffer,2)}set scroll(e){Atomics.store(this.buffer,2,e)}updateScroll(e){Atomics.add(this.buffer,2,e)}resetScroll(){return Atomics.exchange(this.buffer,2,0)}}},{}],6:[function(e,r){const{EventEmitter:t}=e("events"),a=e("../../src/network/reader"),n=e("../../src/network/writer"),s=e("./fake-socket");r.exports=class extends t{constructor(e){super(),this.pid=0,this.bandwidth=0,this.renderer=e,this.pingInterval=self.setInterval(()=>{if(this.pid&&!this.ping){const e=new ArrayBuffer(1);new Uint8Array(e)[0]=69,this.send(e),this.ping=Date.now(),this.renderer.stats.bandwidth=this.bandwidth,this.bandwidth=0}},1e3);const r=this.renderer.state;this.mouseInterval=self.setInterval(()=>{if(this.pid){const e=new n;e.writeUInt8(3),e.writeFloat32(this.renderer.cursor.position[0]),e.writeFloat32(this.renderer.cursor.position[1]);const t=r.exchange();e.writeUInt8(t.spectate),e.writeUInt8(t.splits),e.writeUInt8(t.ejects),e.writeUInt8(t.macro),e.writeUInt8(t.lineLock),this.send(e.finalize()),t.respawn&&this.spawn()}},1e3/30)}connect(e,r="",t=""){this.disconnect(),this.ws="string"==typeof e?new WebSocket(e):new s(e),this.ws.binaryType="arraybuffer",this.ws.onopen=()=>{console.log("Connected to server");const e=new n;e.writeUInt8(69),e.writeInt16(420),e.writeUTF16String(r),e.writeUTF16String(t),this.ws.send(e.finalize()),this.emit("open")},this.ws.onmessage=r=>{const e=new a(new DataView(r.data)),t=e.readUInt8();switch(this.bandwidth+=r.data.byteLength,t){case 1:this.pid=e.readUInt16();({width:2*e.readUInt16(),height:2*e.readUInt16()});this.emit("protocol"),self.postMessage({event:"connect"});break;case 2:this.renderer.clearCells();break;case 3:const a=e.readUInt16(),n=e.readUTF16String(),s=e.readUTF16String();this.renderer.loadPlayerData({id:a,name:n,skin:s});break;case 4:this.parseCellData(r.data);break;case 5:const o=e.readInt16(),f=e.readUInt8(),l={rank:o,me:this.me,players:[]};for(let r=0;r<f;r++)l.players.push(this.renderer.playerData.get(e.readUInt8()));self.postMessage({event:"leaderboard",lb:l});break;case 10:const i=e.readUInt16(),d=e.readUTF16String(),u=this.renderer.playerData.get(i);if(!u)return console.warn(`Received unknown pid: ${i}, message: ${d}`);self.postMessage({event:"chat",pid:i,player:u,message:d});break;case 69:if(!this.ping)return;this.renderer.stats.ping=Date.now()-this.ping,delete this.ping;}},this.ws.onerror=r=>console.error(r),this.ws.onclose=r=>{this.emit("close"),this.renderer.clearCells(),this.renderer.clearData(),console.error(`Socket closed: { code: ${r.code}, reason: ${r.reason} }`),self.postMessage({event:"disconnect"})}}get me(){return this.renderer.playerData.get(this.pid)||{}}get connecting(){return this.ws&&this.ws.readyState==WebSocket.CONNECTING}get connected(){return this.ws&&this.ws.readyState==WebSocket.OPEN}send(e){this.connected&&this.ws.send(e)}parseCellData(e){this.lastPacket=Date.now();const r=this.renderer.core,t=new DataView(e,1,8);this.renderer.target.position[0]=t.getFloat32(0,!0),this.renderer.target.position[1]=t.getFloat32(4,!0),r.HEAPU8.set(new Uint8Array(e,9),this.renderer.cellTypesTableOffset),r.instance.exports.deserialize(0,this.renderer.cellTypesTableOffset)}disconnect(){this.ws&&(console.log("Disconnecting on client"),this.ws.close(),this.ws=null)}spawn(e=this.lastName,r=this.lastSkin){this.lastName=e,this.lastSkin=r;const t=new n;t.writeUInt8(1),t.writeUTF16String(e),t.writeUTF16String(r),this.send(t.finalize())}get player(){return this.renderer.playerData.get(this.pid)}sendChat(e){const r=new n;r.writeUInt8(10),r.writeUTF16String(e),this.send(r.finalize()),this.pid&&self.postMessage({event:"chat",pid:this.pid,player:this.player,message:e})}}},{"../../src/network/reader":2,"../../src/network/writer":3,"./fake-socket":4,events:1}],7:[function(e,r){self.importScripts&&importScripts("https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js");const t=e("./stats"),a=e("./mouse"),n=e("./state"),s=e("./viewport"),o=e("./protocol"),f=e("./wasm-core"),{makeProgram:i,pick:l,getColor:d}=e("./util"),{CELL_VERT_SHADER_SOURCE:u,CELL_FRAG_PEELING_SHADER_SOURCE:E,NAME_VERT_SHADER_SOURCE:_,NAME_FRAG_PEELING_SHADER_SOURCE:T,MASS_VERT_SHADER_SOURCE:R,MASS_FRAG_PEELING_SHADER_SOURCE:p,QUAD_VERT_SHADER_SOURCE:m,BLEND_BACK_FRAG_SHADER_SOURCE:c,FINAL_FRAG_SHADER_SOURCE:A}=e("./shaders"),g=0,b=.25,U=-.33,F=256,x=65536,B=30,L=65536,w=-99999,h=["0","1","2","3","4","5","6","7","8","9",".","k"],D=h.length;class y{constructor(e){this.canvas=e,this.fbo=new Map,this.buffers=new Map,this.uniforms=new Map,this.playerTextures=new Map,this.playerData=new Map([[0,{name:"Server",skin:""}]]),this.updates=new Map,this.stats=new t,this.mouse=new a,this.state=new n,this.viewport=new s,this.core=new f(this),this.viewbox={t:0,b:0,l:0,r:0},this.initLoader(),this.drawCells=this.drawCells.bind(this),this.drawNames=this.drawNames.bind(this),this.drawMass=this.drawMass.bind(this),this.options={DRAW_DELAY:120,DRAW_NAME:!0,DRAW_MASS:!0,DRAW_SKIN:!0},this.fps=0,this.fpsInterval=setInterval(()=>{this.stats.fps=this.fps,this.fps=0},1e3)}start(){if(this.r)return!1;const e=r=>{this.r=requestAnimationFrame(e);try{this.render(r)}catch(r){this.stop(),console.error(r)}};return this.r=requestAnimationFrame(e),!0}stop(){return!!this.r&&(this.r=cancelAnimationFrame(this.r),!0)}loadPlayerData(e){this.loader.postMessage(e),this.playerData.set(e.id,{skin:e.skin,name:e.name})}initLoader(){this.loader=new Worker(self.window?"js/loader.min.js":"loader.min.js"),this.loader.onmessage=r=>this.updates.set(r.data.id,[r.data.skin,r.data.name])}loadUniform(e,r){this.uniforms.has(e)||this.uniforms.set(e,new Map),this.uniforms.get(e).set(r,this.gl.getUniformLocation(e,r))}getUniform(e,r){return this.uniforms.get(e).get(r)}async initEngine(){const e=this.gl=this.canvas.getContext("webgl2",{premultipliedAlpha:!1,powerPreference:"high-performance"});if(!e)return console.error("WebGL2 Not Supported");console.log("Loading WASM..."),await this.core.load(),console.log("Loading font");let r=new FontFace("Bree Serif","url(/static/font/BreeSerif-Regular.ttf)");if(self.fonts&&fonts.add(r),await r.load(),r=new FontFace("Lato","url(/static/font/Lato-Bold.ttf)"),self.fonts&&fonts.add(r),await r.load(),!self.mat4){console.log("Loading glMatrix library");const e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js",document.body.appendChild(e),await new Promise(r=>e.onload=r)}this.cursor={position:vec3.create()},this.target={position:vec3.create(),scale:10},this.camera={position:vec3.create(),scale:10},this.proj=mat4.create(),console.log("Loading bot skins & names");const t=await fetch("/static/data/bots.json");if(this.bots=await t.json(),this.BYTES_PER_CELL_DATA=this.core.instance.exports.bytes_per_cell_data(),this.BYTES_PER_RENDER_CELL=this.core.instance.exports.bytes_per_render_cell(),this.cellTypesTableOffset=x*this.BYTES_PER_CELL_DATA,console.log(`Table offset: ${this.cellTypesTableOffset}`),this.cellBufferOffset=this.cellTypesTableOffset+2*F,console.log(`Render buffers offset: ${this.cellBufferOffset}`),this.cellBufferEnd=this.cellBufferOffset+x*this.BYTES_PER_RENDER_CELL,console.log(`Render buffer end ${this.cellBufferEnd}`),this.nameBufferOffset=this.cellBufferEnd+2*F,this.nameBufferEnd=this.nameBufferOffset+x*this.BYTES_PER_RENDER_CELL,console.log(`Memory allocated: ${this.core.buffer.byteLength} bytes`),this.cellTypesTable=new Uint16Array(this.core.buffer,this.cellTypesTableOffset,F),this.nameTypesTable=new Uint16Array(this.core.buffer,this.cellBufferEnd,F),this.renderBuffer=this.core.HEAPU8.subarray(this.cellBufferOffset,this.cellBufferEnd),this.renderBufferView=new DataView(this.core.buffer,this.cellBufferOffset,x*this.BYTES_PER_RENDER_CELL),this.massWidthsTable=new Map,this.massBuffer=new Float32Array(new ArrayBuffer(128*x)),!e.getExtension("EXT_color_buffer_float"))return void console.error("FLOAT color buffer not available");e.enable(e.BLEND),e.depthMask(!1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA);const a=this.peel_prog1=i(e,u,E),n=this.peel_prog2=i(e,_,T),s=this.peel_prog3=i(e,R,p),f=this.blend_prog=i(e,m,c),l=this.final_prog=i(e,m,A);for(const e of[a,n,s])this.loadUniform(e,"u_proj"),this.loadUniform(e,"u_depth"),this.loadUniform(e,"u_front_color");this.loadUniform(a,"u_skin"),this.loadUniform(a,"u_circle"),this.loadUniform(a,"u_circle_color"),this.loadUniform(n,"u_dim"),this.loadUniform(n,"u_name"),this.loadUniform(s,"u_uvs"),this.loadUniform(s,"u_mass_char"),this.loadUniform(f,"u_back_color"),this.loadUniform(l,"u_front_color"),this.loadUniform(l,"u_back_color"),this.setUpPeelingBuffers(),this.generateQuadVAO(),this.generateMassVAO(),this.generateCircleTexture(),this.generateMassTextures(),this.allocBuffer("cell_data_buffer"),e.bindVertexArray(this.quadVAO),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferData(e.ARRAY_BUFFER,this.renderBuffer,e.DYNAMIC_DRAW),e.vertexAttribPointer(1,3,e.FLOAT,!1,0,0),e.vertexAttribDivisor(1,2),e.enableVertexAttribArray(1),e.useProgram(a),e.uniform1i(this.getUniform(a,"u_circle"),10),e.uniform1i(this.getUniform(a,"u_skin"),11),e.useProgram(n),e.uniform1i(this.getUniform(n,"u_name"),12),e.useProgram(s),e.uniform1i(this.getUniform(s,"u_mass_char"),13),e.useProgram(l),e.uniform1i(this.getUniform(l,"u_back_color"),6),e.activeTexture(e.TEXTURE11),this.empty_texture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.empty_texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,null),this.loadPlayerData({id:253,name:"virus",skin:"/static/img/virus.png"}),this.start(),this.protocol=new o(this)}clearCells(){this.core.HEAPU32.fill(0),this.massBuffer.fill(0)}clearData(){this.playerData=new Map([[0,{name:"Server",skin:""}]]);const e=[...this.playerTextures.keys()].filter(e=>250>=e);for(const r of e){const e=this.playerTextures.get(r);e.name&&this.gl.deleteTexture(e.name),e.skin&&this.gl.deleteTexture(e.skin),this.playerTextures.delete(r)}}randomPlayer(){return{skin:l(this.bots.skins),name:l(this.bots.names)}}async genCells(){for(let e=1;256>e;e++)this.loadPlayerData({id:e,...randomPlayer()});this.GEN_CELLS=65536;const e=new DataView(this.core.buffer,0,this.GEN_CELLS*this.BYTES_PER_CELL_DATA),r=(e,r)=>Math.random()*(r-e)+e;for(let t=0;t<this.GEN_CELLS;t++){const a=this.BYTES_PER_CELL_DATA*t,n=~~(255*Math.random()+1),s=~~r(-L,L)+n/10,o=~~r(-L,L)+n/10,f=r(B,B+200);e.setUint32(0+a,n,!0),e.setFloat32(4+a,s,!0),e.setFloat32(8+a,o,!0),e.setFloat32(12+a,f,!0),e.setFloat32(16+a,s,!0),e.setFloat32(20+a,o,!0),e.setFloat32(24+a,f,!0),e.setFloat32(28+a,s,!0),e.setFloat32(32+a,o,!0),e.setFloat32(36+a,f,!0)}}allocBuffer(e){if(this.buffers.has(e))throw new Error(`Already allocated buffer "${e}"`);const r=this.gl.createBuffer();return this.buffers.set(e,r),r}allocFrameBuffer(e,r=1){if(this.fbo.has(e))throw new Error(`Already allocated framebuffer "${e}"`);this.fbo.set(e,1==r?this.gl.createFramebuffer():Array.from({length:r},()=>this.gl.createFramebuffer()))}setUpPeelingBuffers(){this.allocFrameBuffer("peel_depths",2),this.allocFrameBuffer("peel_colors",2),this.allocFrameBuffer("blend_back");const e=this.gl,r=()=>{e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)};for(let t=0;2>t;t++){e.bindFramebuffer(e.FRAMEBUFFER,this.fbo.get("peel_depths")[t]);const a=3*t,n=e.createTexture();e.activeTexture(e.TEXTURE0+a),e.bindTexture(e.TEXTURE_2D,n),r(),e.texImage2D(e.TEXTURE_2D,0,e.RG32F,1920,1080,0,e.RG,e.FLOAT,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.createTexture();e.activeTexture(e.TEXTURE1+a),e.bindTexture(e.TEXTURE_2D,s),r(),e.texImage2D(e.TEXTURE_2D,0,e.RGBA16F,1920,1080,0,e.RGBA,e.HALF_FLOAT,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT1,e.TEXTURE_2D,s,0);const o=e.createTexture();e.activeTexture(e.TEXTURE2+a),e.bindTexture(e.TEXTURE_2D,o),r(),e.texImage2D(e.TEXTURE_2D,0,e.RGBA16F,1920,1080,0,e.RGBA,e.HALF_FLOAT,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT2,e.TEXTURE_2D,o,0),e.bindFramebuffer(e.FRAMEBUFFER,this.fbo.get("peel_colors")[t]),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT1,e.TEXTURE_2D,o,0)}{e.bindFramebuffer(e.FRAMEBUFFER,this.fbo.get("blend_back"));const t=e.createTexture();e.activeTexture(e.TEXTURE6),e.bindTexture(e.TEXTURE_2D,t),r(),e.texImage2D(e.TEXTURE_2D,0,e.RGBA16F,1920,1080,0,e.RGBA,e.HALF_FLOAT,null),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}}clearPeelingBuffers(){const e=this.gl;e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("blend_back")),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0]),e.clearColor(w,w,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[1]),e.clearColor(-0,1,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0,e.COLOR_ATTACHMENT1]),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[1]),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0]),e.blendEquation(e.MAX);for(const r of[this.peel_prog1,this.peel_prog2,this.peel_prog3])e.useProgram(r),e.uniform1i(this.getUniform(r,"u_depth"),3),e.uniform1i(this.getUniform(r,"u_front_color"),4)}generateQuadVAO(){const e=this.gl,r=this.quadVAO=e.createVertexArray();e.bindVertexArray(r);const t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,1,-1,-1,1,-1,-1,1,1,-1,1,1]),e.STATIC_DRAW);{const r=e.FLOAT;e.vertexAttribPointer(0,2,r,!1,0,0),e.enableVertexAttribArray(0)}}generateMassVAO(){const e=this.gl,r=this.massVAO=e.createVertexArray();e.bindVertexArray(r);const t=this.allocBuffer("mass_buffer");e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.massBuffer,e.DYNAMIC_DRAW);{const r=e.FLOAT;e.vertexAttribPointer(0,4,r,!1,0,0),e.enableVertexAttribArray(0)}}generateCircleTexture(){const e=this.gl,r=e.createTexture();e.activeTexture(e.TEXTURE10),e.bindTexture(e.TEXTURE_2D,r);{console.log(`Generating ${4096}x${4096} circle texture`);const r=self.window?document.createElement("canvas"):new OffscreenCanvas(4096,4096);self.window&&(r.width=r.height=4096);const t=r.getContext("2d");t.fillStyle="white",t.arc(2048,2048,2048-10,0,2*Math.PI,!1),t.fill(),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r),e.generateMipmap(e.TEXTURE_2D),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)}}generateMassTextures(){console.log("Generating mass characters");const e=this.gl,r=e.createTexture();e.activeTexture(e.TEXTURE13),e.bindTexture(e.TEXTURE_2D_ARRAY,r);const t=320,a=320;{e.texImage3D(e.TEXTURE_2D_ARRAY,0,e.RGBA,t,a,D,0,e.RGBA,e.UNSIGNED_BYTE,null);const r=self.window?document.createElement("canvas"):new OffscreenCanvas(t,a);self.window&&(r.width=t,r.height=a);const n=r.getContext("2d");n.font="bold 280px Lato",n.fillStyle="white",n.strokeStyle="black",n.textAlign="center",n.lineWidth=30,n.textBaseline="middle";const s=new Float32Array(2*(4*D));for(let o=0;o<D;o++){const f=h[o];n.clearRect(0,0,r.width,r.height),n.strokeText(f,r.width>>1,r.height>>1),n.fillText(f,r.width>>1,r.height>>1);const i=(n.measureText(f).width+20)/r.width;this.massWidthsTable.set(f,i),e.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,o,t,a,1,e.RGBA,e.UNSIGNED_BYTE,r);const l=.5-i/2,d=.5+i/2,u=0,E=1;s[8*o+0]=l,s[8*o+1]=u,s[8*o+2]=d,s[8*o+3]=u,s[8*o+4]=l,s[8*o+5]=E,s[8*o+6]=d,s[8*o+7]=E}e.generateMipmap(e.TEXTURE_2D_ARRAY),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.useProgram(this.peel_prog3),e.uniform2fv(this.getUniform(this.peel_prog3,"u_uvs"),s)}}screenToWorld(e=vec3.create(),r=0,t=0){const a=mat4.create();mat4.invert(a,this.proj),vec3.transformMat4(e,[r,-t,0],a)}updateTarget(){this.screenToWorld(this.cursor.position,2*(this.mouse.x/this.viewport.width)-1,2*(this.mouse.y/this.viewport.height)-1),this.target.scale*=1+this.mouse.resetScroll()/1e3,this.target.scale=Math.max(this.target.scale,.01),this.target.scale=Math.min(this.target.scale,1e4)}lerpCamera(e=1/60,r){vec3.lerp(this.camera.position,this.camera.position,this.target.position,e),this.camera.scale+=(this.target.scale-this.camera.scale)*e*5;const t=r?r.x:this.camera.position[0],a=r?r.y:this.camera.position[1],n=this.viewport.width*this.camera.scale/2,s=this.viewport.height*this.camera.scale/2,o=this.viewbox;mat4.ortho(this.proj,o.l=t-n,o.r=t+n,o.b=a-s,o.t=a+s,0,1)}checkViewport(){const e=this.gl;(e.canvas.width!=this.viewport.width||e.canvas.height!=this.viewport.height)&&(e.canvas.width=this.viewport.width,e.canvas.height=this.viewport.height)}drawCells(){const e=this.gl;e.bindVertexArray(this.quadVAO),e.activeTexture(e.TEXTURE11),this.options.DRAW_SKIN||e.bindTexture(e.TEXTURE_2D,this.empty_texture);for(let r=1;r<F;r++){let t=this.cellTypesTable[r-1],a=this.cellTypesTable[r];if(t==a)continue;a||(a=65536);const n=this.cellBufferOffset+t*this.BYTES_PER_RENDER_CELL,s=new Float32Array(this.core.buffer,n,3*(a-t));if(253==r)e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),0,0,0,0);else if(251==r)e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),.5,.5,.5,.5);else{const t=d(r);e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),t[0],t[1],t[2],1)}const o=this.playerTextures.get(r)||{};this.options.DRAW_SKIN&&e.bindTexture(e.TEXTURE_2D,o.skin||this.empty_texture),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,s),e.bindBuffer(e.ARRAY_BUFFER,null);const f=2*(a-t);e.drawArraysInstanced(e.TRIANGLES,0,6,f)}}drawNames(){const e=this.gl;e.bindVertexArray(this.quadVAO),e.activeTexture(e.TEXTURE12);for(let r=1;r<F;r++){if(!this.playerTextures.has(r))continue;let t=this.nameTypesTable[r-1],a=this.nameTypesTable[r];if(t==a)continue;a||(a=65536);const n=this.playerTextures.get(r);if(!n.name||!n.name_dim)continue;const s=this.nameBufferOffset+t*this.BYTES_PER_RENDER_CELL,o=new Float32Array(this.core.buffer,s,3*(a-t));e.uniform4f(this.getUniform(this.peel_prog2,"u_dim"),n.name_dim[0],n.name_dim[1],.25,-.03),e.bindTexture(e.TEXTURE_2D,n.name),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,o),e.bindBuffer(e.ARRAY_BUFFER,null);const f=2*(a-t);e.drawArraysInstanced(e.TRIANGLES,0,6,f)}}drawMass(){const e=this.renderMassBuffer.length>>2;if(!(e%3)&&e){const e=this.gl;e.bindVertexArray(this.massVAO),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("mass_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,this.renderMassBuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.drawArrays(e.TRIANGLES,0,this.renderMassBuffer.length>>2)}}buildMassBuffer(e){let r=0;for(let t=0;t<e.length;t+=4){const a=e[t],n=e[t+1],s=e[t+2],o=Math.floor(e[t+3]).toString();let f=(o.length-1)*g*b;for(let e=0;e<o.length;e++)f+=b*this.massWidthsTable.get(o[e]);let l=-f/2;for(let e=0;e<o.length;e++){const t="."==o[e]?10:"k"==o[e]?11:~~o[e],f=this.massWidthsTable.get(o[e]),i=l*s,d=i+b*f*s,u=(+.5*b+U)*s,E=(-.5*b+U)*s;l+=b*f+g,this.massBuffer[r++]=a+i,this.massBuffer[r++]=n+u,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+0,this.massBuffer[r++]=a+d,this.massBuffer[r++]=n+u,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+1,this.massBuffer[r++]=a+i,this.massBuffer[r++]=n+E,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+2,this.massBuffer[r++]=a+d,this.massBuffer[r++]=n+u,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+1,this.massBuffer[r++]=a+i,this.massBuffer[r++]=n+E,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+2,this.massBuffer[r++]=a+d,this.massBuffer[r++]=n+E,this.massBuffer[r++]=s,this.massBuffer[r++]=4*t+3}}this.renderMassBuffer=this.massBuffer.subarray(0,r)}render(e){if(!this.lastTimestamp)return void(this.lastTimestamp=e);this.fps++;const r=e-this.lastTimestamp;this.lastTimestamp=e,this.cellTypesTable.fill(0),this.nameTypesTable.fill(0);const t=this.protocol.lastPacket?(Date.now()-this.protocol.lastPacket)/this.options.DRAW_DELAY:0,a=this.core.instance.exports.draw_cells(0,this.cellTypesTableOffset,this.cellBufferOffset,t,this.viewbox.t,this.viewbox.b,this.viewbox.l,this.viewbox.r);let n=0;this.updateTarget();if(this.lerpCamera(r/this.options.DRAW_DELAY,null),this.checkViewport(),!this.state.focused&&(this.updateTextures(),100>this.lastDraw-e))return;const s=this.gl;s.viewport(0,0,s.drawingBufferWidth,s.drawingBufferHeight);let o;this.clearPeelingBuffers();const f=[this.peel_prog1],i=[this.drawCells];(this.options.DRAW_MASS||this.options.DRAW_NAME)&&(n=this.core.instance.exports.draw_text(0,this.cellTypesTableOffset,this.cellBufferEnd,this.nameBufferOffset,this.nameBufferEnd,.03,this.viewbox.t,this.viewbox.b,this.viewbox.l,this.viewbox.r),this.options.DRAW_NAME&&(f.push(this.peel_prog2),i.push(this.drawNames)),this.options.DRAW_MASS&&(this.buildMassBuffer(new Float32Array(this.core.buffer,this.nameBufferEnd,4*n)),f.push(this.peel_prog3),i.push(this.drawMass))),o=this.depthPeelRender(2,f,i),this.stats.cells=a,this.stats.text=n,s.bindFramebuffer(s.FRAMEBUFFER,null),s.clearColor(0,0,0,1),s.clear(s.COLOR_BUFFER_BIT),s.blendFunc(s.ONE,s.ONE_MINUS_SRC_ALPHA),s.useProgram(this.final_prog),s.uniform1i(this.getUniform(this.final_prog,"u_front_color"),o+1),s.bindVertexArray(this.quadVAO),s.drawArrays(s.TRIANGLES,0,6),this.updateTextures(),this.lastDraw=e}updateTextures(){const e=this.gl;if(this.updates.size){e.activeTexture(e.TEXTURE11);let r=0;for(const[e,t]of this.updates.entries())if(this.uploadPlayerTextures(e,t[0],t[1]),this.updates.delete(e),2<++r)break}}uploadTexture(e,r){const t=this.gl;r&&(t.bindTexture(t.TEXTURE_2D,e),t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,!0),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r),t.generateMipmap(t.TEXTURE_2D),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR_MIPMAP_LINEAR),r.close())}uploadPlayerTextures(e=0,r,t){const a=this.gl,n=this.playerTextures.get(e)||{};n.skin&&a.deleteTexture(n.skin),n.name&&a.deleteTexture(n.name),r&&(n.skin=a.createTexture()),t&&(n.name=a.createTexture()),t&&(n.name_dim=[t.width/512,t.height/512]),this.uploadTexture(n.skin,r),this.uploadTexture(n.name,t),this.playerTextures.set(~~e,n)}depthPeelRender(e=4,r,t){const a=this.gl;for(let n in r)a.useProgram(r[n]),a.uniformMatrix4fv(this.getUniform(r[n],"u_proj"),!1,this.proj),t[n](!0);let n,s,o,f;for(let l=0;l<e;l++){for(let e in n=l%2,s=1-n,a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[s]),a.drawBuffers([a.COLOR_ATTACHMENT0]),a.clearColor(w,w,0,0),a.clear(a.COLOR_BUFFER_BIT),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[s]),a.drawBuffers([a.COLOR_ATTACHMENT0,a.COLOR_ATTACHMENT1]),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[s]),a.drawBuffers([a.COLOR_ATTACHMENT0,a.COLOR_ATTACHMENT1,a.COLOR_ATTACHMENT2]),a.blendEquation(a.MAX),o=3*n,r)a.useProgram(r[e]),a.uniform1i(this.getUniform(r[e],"u_depth"),o),a.uniform1i(this.getUniform(r[e],"u_front_color"),o+1),t[e]();f=3*s,a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("blend_back")),a.drawBuffers([a.COLOR_ATTACHMENT0]),a.blendEquation(a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),a.useProgram(this.blend_prog),a.uniform1i(this.getUniform(this.blend_prog,"u_back_color"),f+2),a.bindVertexArray(this.quadVAO),a.drawArrays(a.TRIANGLES,0,6)}return f}}self.window?self.Renderer=y:self.addEventListener("message",async function(r){const{data:e}=r,t=self.r=new y(e.offscreen);t.stats.setBuffer(e.stats),t.mouse.setBuffer(e.mouse),t.state.setBuffer(e.state),t.viewport.setBuffer(e.viewport),await t.initEngine(),self.addEventListener("message",r=>{const e=t.protocol;r.data.connect&&!e.connecting&&e.connect(r.data.connect,r.data.name,r.data.skin),r.data.spawn&&(e.connecting?e.once("protocol",()=>e.spawn(r.data.name,r.data.skin)):e.spawn(r.data.name,r.data.skin)),r.data.chat&&e.sendChat(r.data.chat)}),self.postMessage({event:"ready"})},{once:!0}),r.exports=y},{"./mouse":5,"./protocol":6,"./shaders":8,"./state":9,"./stats":10,"./util":11,"./viewport":12,"./wasm-core":13}],8:[function(e,r){r.exports.CELL_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform mat4 u_proj;

layout(location=0) in vec2 a_position;
layout(location=1) in vec3 a_data;

out vec2 v_texcoord;

void main() {

    vec4 world_pos = vec4(a_position * a_data.z + a_data.xy, -1.0 / pow(a_data.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;

    // Map from -1 to 1 -> 0 to 1
    v_texcoord = (vec2(a_position.x, -a_position.y) + 1.0) / 2.0;
}
`,r.exports.CELL_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;

#define MAX_DEPTH 99999.0

uniform vec4 u_circle_color;

uniform sampler2D u_skin;
uniform sampler2D u_circle;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {

    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;
    vec4 circle = texture(u_circle, v_texcoord);

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || circle.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }
    vec4 skin = texture(u_skin, v_texcoord);
    vec4 color = vec4(mix(u_circle_color.rgb * u_circle_color.a, skin.rgb, skin.a), 
        mix(skin.a, circle.a, u_circle_color.a));

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.NAME_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform mat4 u_proj;
uniform vec4 u_dim;

layout(location=0) in vec2 a_position;
layout(location=1) in vec3 a_data;

out vec2 v_texcoord;

void main() {
    vec2 obj_pos = a_position * u_dim.xy * u_dim.z + vec2(0, u_dim.w);
    vec4 world_pos = vec4(obj_pos * a_data.z + a_data.xy, -1.0 / pow(a_data.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;

    v_texcoord = (vec2(a_position.x, -a_position.y) + 1.0) / 2.0;
}
`,r.exports.NAME_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;

#define MAX_DEPTH 99999.0

uniform sampler2D u_name;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {
    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;

    vec4 color = texture(u_name, v_texcoord);

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || color.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.MASS_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;
precision highp int;

uniform mat4 u_proj;
uniform vec2 u_uvs[48];

layout(location=0) in vec4 a_position;

out vec2 v_texcoord;
flat out int character;

void main() {
    vec4 world_pos = vec4(a_position.xy, -1.0 / pow(a_position.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;
    character = int(a_position.w) >> 2;
    v_texcoord = u_uvs[int(a_position.w)];
}
`,r.exports.MASS_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler2DArray;

#define MAX_DEPTH 99999.0

uniform sampler2DArray u_mass_char;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;
flat in int character;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {
    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;

    vec4 color = texture(u_mass_char, vec3(v_texcoord, character));

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || color.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.QUAD_VERT_SHADER_SOURCE=`#version 300 es
layout(location=0) in vec4 aPosition;
void main() {
    gl_Position = aPosition;
}`,r.exports.BLEND_BACK_FRAG_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform sampler2D u_back_color;

out vec4 fragColor;
void main() {
    fragColor = texelFetch(u_back_color, ivec2(gl_FragCoord.xy), 0);
    if (fragColor.a == 0.0) { 
        discard;
    }
}
`,r.exports.FINAL_FRAG_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform sampler2D u_front_color;
uniform sampler2D u_back_color;

out vec4 fragColor;
void main() {
    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec4 frontColor = texelFetch(u_front_color, fragCoord, 0);
    vec4 backColor = texelFetch(u_back_color, fragCoord, 0);
    float alphaMultiplier = 1.0 - frontColor.a;

    fragColor = vec4(
        frontColor.rgb + alphaMultiplier * backColor.rgb,
        frontColor.a + backColor.a
    );
}`},{}],9:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(7):e=new ArrayBuffer(7)),this.sharedBuffer=e,this.buffer=new Uint8Array(this.sharedBuffer)}get spectate(){return Atomics.load(this.buffer,0)}set spectate(e){Atomics.store(this.buffer,0,e)}get splits(){return Atomics.load(this.buffer,1)}set splits(e){Atomics.add(this.buffer,1,e)}get ejects(){return Atomics.load(this.buffer,2)}set ejects(e){Atomics.add(this.buffer,2,e)}get macro(){return Atomics.load(this.buffer,3)}set macro(e){Atomics.store(this.buffer,3,e)}get respawn(){return Atomics.load(this.buffer,4)}set respawn(e){Atomics.store(this.buffer,4,e)}get focused(){return Atomics.load(this.buffer,5)}set focused(e){Atomics.store(this.buffer,5,e)}get lineLock(){return Atomics.load(this.buffer,6)}set lineLock(e){Atomics.store(this.buffer,6,e)}exchange(){return{spectate:Atomics.exchange(this.buffer,0,0),splits:Atomics.exchange(this.buffer,1,0),ejects:Atomics.exchange(this.buffer,2,0),macro:this.macro,respawn:Atomics.exchange(this.buffer,4,0),lineLock:Atomics.exchange(this.buffer,6,0)}}}},{}],10:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(20):e=new ArrayBuffer(20)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get fps(){return Atomics.load(this.buffer,0)}set fps(e){Atomics.store(this.buffer,0,e)}get ping(){return Atomics.load(this.buffer,1)}set ping(e){Atomics.store(this.buffer,1,e)}get cells(){return Atomics.load(this.buffer,2)}set cells(e){Atomics.store(this.buffer,2,e)}get text(){return Atomics.load(this.buffer,3)}set text(e){Atomics.store(this.buffer,3,e)}get bandwidth(){return Atomics.load(this.buffer,4)}set bandwidth(e){Atomics.store(this.buffer,4,e)}}},{}],11:[function(e,r){r.exports.pick=e=>e[~~(Math.random()*e.length)],r.exports.makeProgram=(e,r,t)=>{const a=e.createShader(e.VERTEX_SHADER),n=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(a,r),e.shaderSource(n,t),e.compileShader(a),e.compileShader(n);const s=e.createProgram();if(e.attachShader(s,a),e.attachShader(s,n),e.linkProgram(s),!e.getProgramParameter(s,e.LINK_STATUS))throw console.error(`vs info-log: ${e.getShaderInfoLog(a)}\n`+`info-log: ${e.getShaderInfoLog(n)}`),new Error(`prog link failed: ${e.getProgramInfoLog(s)}`);return s};const t=[[255,0,0],[255,128,0],[255,255,0],[128,255,0],[0,255,0],[0,255,128],[0,255,255],[0,128,255],[127,0,255],[255,0,255],[255,0,127]].map(e=>e.map(e=>e/255));r.exports.getColor=e=>t[e%t.length]},{}],12:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(8):e=new ArrayBuffer(8)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get width(){return Atomics.load(this.buffer,0)}set width(e){Atomics.store(this.buffer,0,e)}get height(){return Atomics.load(this.buffer,1)}set height(e){Atomics.store(this.buffer,1,e)}}},{}],13:[function(e,r){r.exports=class{constructor(e){this.renderer=e}async load(e=1024){if(this.loading||this.instance)return!1;this.loading=!0;const r=await fetch("/static/wasm/client.wasm"),t=new WebAssembly.Memory({initial:e,maximum:e});return this.instance=await WebAssembly.instantiate(await WebAssembly.compile(await r.arrayBuffer()),{env:{memory:t,log_add_packet:(e,r,t,a,n)=>{console.log("Add Packet: ",{id:e,type:r,x:t,y:a,size:n})}}}),this.buffer=t.buffer,this.HEAPU8=new Uint8Array(t.buffer),this.HEAPU16=new Uint16Array(t.buffer),this.HEAPF32=new Float32Array(t.buffer),this.HEAPU32=new Uint32Array(t.buffer),this.loading=!1,!0}}},{}]},{},[7]);
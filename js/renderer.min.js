(function(){function s(l,e,r){function t(o,i){if(!e[o]){if(!l[o]){var f="function"==typeof require&&require;if(!i&&f)return f(o,!0);if(n)return n(o,!0);var d=new Error("Cannot find module '"+o+"'");throw d.code="MODULE_NOT_FOUND",d}var a=e[o]={exports:{}};l[o][0].call(a.exports,function(e){var r=l[o][1][e];return t(r||e)},a,a.exports,s,l,e,r)}return e[o].exports}for(var n="function"==typeof require&&require,a=0;a<r.length;a++)t(r[a]);return t}return s})()({1:[function(e,r){'use strict';function t(e){console&&console.warn&&console.warn(e)}function a(){a.init.call(this)}function s(e){if("function"!=typeof e)throw new TypeError("The \"listener\" argument must be of type Function. Received type "+typeof e)}function n(e){return void 0===e._maxListeners?a.defaultMaxListeners:e._maxListeners}function o(e,r,a,o){var i,f,l;if(s(a),f=e._events,void 0===f?(f=e._events=Object.create(null),e._eventsCount=0):(void 0!==f.newListener&&(e.emit("newListener",r,a.listener?a.listener:a),f=e._events),l=f[r]),void 0===l)l=f[r]=a,++e._eventsCount;else if("function"==typeof l?l=f[r]=o?[a,l]:[l,a]:o?l.unshift(a):l.push(a),i=n(e),0<i&&l.length>i&&!l.warned){l.warned=!0;var d=new Error("Possible EventEmitter memory leak detected. "+l.length+" "+(r+" listeners added. Use emitter.setMaxListeners() to increase limit"));d.name="MaxListenersExceededWarning",d.emitter=e,d.type=r,d.count=l.length,t(d)}return e}function i(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function f(e,r,t){var a={fired:!1,wrapFn:void 0,target:e,type:r,listener:t},s=i.bind(a);return s.listener=t,a.wrapFn=s,s}function l(e,r,t){var a=e._events;if(a===void 0)return[];var s=a[r];return void 0===s?[]:"function"==typeof s?t?[s.listener||s]:[s]:t?E(s):u(s,s.length)}function d(e){var r=this._events;if(r!==void 0){var t=r[e];if("function"==typeof t)return 1;if(void 0!==t)return t.length}return 0}function u(e,r){for(var t=Array(r),a=0;a<r;++a)t[a]=e[a];return t}function p(e,r){for(;r+1<e.length;r++)e[r]=e[r+1];e.pop()}function E(e){for(var r=Array(e.length),t=0;t<r.length;++t)r[t]=e[t].listener||e[t];return r}var _,c="object"==typeof Reflect?Reflect:null,m=c&&"function"==typeof c.apply?c.apply:function(e,r,t){return Function.prototype.apply.call(e,r,t)};_=c&&"function"==typeof c.ownKeys?c.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var T=Number.isNaN||function(e){return e!==e};r.exports=a,r.exports.once=function(e,r){return new Promise(function(t,a){function s(){n!==void 0&&e.removeListener("error",n),t([].slice.call(arguments))}var n;"error"!==r&&(n=function(t){e.removeListener(r,s),a(t)},e.once("error",n)),e.once(r,s)})},a.EventEmitter=a,a.prototype._events=void 0,a.prototype._eventsCount=0,a.prototype._maxListeners=void 0;var g=10;Object.defineProperty(a,"defaultMaxListeners",{enumerable:!0,get:function(){return g},set:function(e){if("number"!=typeof e||0>e||T(e))throw new RangeError("The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received "+e+".");g=e}}),a.init=function(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},a.prototype.setMaxListeners=function(e){if("number"!=typeof e||0>e||T(e))throw new RangeError("The value of \"n\" is out of range. It must be a non-negative number. Received "+e+".");return this._maxListeners=e,this},a.prototype.getMaxListeners=function(){return n(this)},a.prototype.emit=function(e){for(var r=[],t=1;t<arguments.length;t++)r.push(arguments[t]);var a="error"===e,s=this._events;if(s!==void 0)a=a&&s.error===void 0;else if(!a)return!1;if(a){var n;if(0<r.length&&(n=r[0]),n instanceof Error)throw n;var o=new Error("Unhandled error."+(n?" ("+n.message+")":""));throw o.context=n,o}var f=s[e];if(f===void 0)return!1;if("function"==typeof f)m(f,this,r);else for(var l=f.length,d=u(f,l),t=0;t<l;++t)m(d[t],this,r);return!0},a.prototype.addListener=function(e,r){return o(this,e,r,!1)},a.prototype.on=a.prototype.addListener,a.prototype.prependListener=function(e,r){return o(this,e,r,!0)},a.prototype.once=function(e,r){return s(r),this.on(e,f(this,e,r)),this},a.prototype.prependOnceListener=function(e,r){return s(r),this.prependListener(e,f(this,e,r)),this},a.prototype.removeListener=function(e,r){var t,a,n,o,f;if(s(r),a=this._events,void 0===a)return this;if(t=a[e],void 0===t)return this;if(t===r||t.listener===r)0==--this._eventsCount?this._events=Object.create(null):(delete a[e],a.removeListener&&this.emit("removeListener",e,t.listener||r));else if("function"!=typeof t){for(n=-1,o=t.length-1;0<=o;o--)if(t[o]===r||t[o].listener===r){f=t[o].listener,n=o;break}if(0>n)return this;0===n?t.shift():p(t,n),1===t.length&&(a[e]=t[0]),void 0!==a.removeListener&&this.emit("removeListener",e,f||r)}return this},a.prototype.off=a.prototype.removeListener,a.prototype.removeAllListeners=function(e){var r,t,a;if(t=this._events,void 0===t)return this;if(void 0===t.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==t[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete t[e]),this;if(0===arguments.length){var s,n=Object.keys(t);for(a=0;a<n.length;++a)s=n[a],"removeListener"!==s&&this.removeAllListeners(s);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(r=t[e],"function"==typeof r)this.removeListener(e,r);else if(void 0!==r)for(a=r.length-1;0<=a;a--)this.removeListener(e,r[a]);return this},a.prototype.listeners=function(e){return l(this,e,!0)},a.prototype.rawListeners=function(e){return l(this,e,!1)},a.listenerCount=function(e,r){return"function"==typeof e.listenerCount?e.listenerCount(r):d.call(e,r)},a.prototype.listenerCount=d,a.prototype.eventNames=function(){return 0<this._eventsCount?_(this._events):[]}},{}],2:[function(e,r){var t=String.fromCharCode;r.exports=class{constructor(e,r=!0){this.view=e,this.offset=0,this.le=r}get length(){return this.view.byteLength}readUInt8(){return this.view.getUint8(this.offset++)}readInt8(){return this.view.getInt8(this.offset++)}readUInt16(){const e=this.view.getUint16(this.offset,this.le);return this.offset+=2,e}readInt16(){const e=this.view.getUint16(this.offset,this.le);return this.offset+=2,e}readUInt32(){const e=this.view.getUint32(this.offset,this.le);return this.offset+=4,e}readInt32(){const e=this.view.getInt32(this.offset,this.le);return this.offset+=4,e}readFloat32(){const e=this.view.getFloat32(this.offset,this.le);return this.offset+=4,e}readFloat64(){const e=this.view.getFloat64(this.offset,this.le);return this.offset+=8,e}skip(e){this.offset+=e}readUTF8String(){const e=[];for(;this.offset<this.view.byteLength;){const r=this.readUInt8();if(!r)break;e.push(t(r))}return e.join("")}readUTF16String(){const e=[];for(;this.offset<this.view.byteLength;){const r=this.readUInt16();if(!r)break;e.push(t(r))}return e.join("")}}},{}],3:[function(e,r){const t=new DataView(new ArrayBuffer(1048576));r.exports=class{constructor(e=!0){this.offset=0,this.le=e}writeUInt8(e){t.setUint8(this.offset++,e)}writeInt8(e){t.setInt8(this.offset++,e)}writeUInt16(e){t.setUint16(this.offset,e,this.le),this.offset+=2}writeInt16(e){t.setInt16(this.offset,e,this.le),this.offset+=2}writeUInt32(e){t.setUint32(this.offset,e,this.le),this.offset+=4}writeInt32(e){t.setInt32(this.offset,e,this.le),this.offset+=4}writeFloat32(e){t.setFloat32(this.offset,e,this.le),this.offset+=4}writeFloat64(e){t.setFloat64(this.offset,e,this.le),this.offset+=8}writeUTF8String(e){for(let r=0;r<e.length;r++)this.writeUInt8(e.charCodeAt(r));this.writeUInt8(0)}writeUTF16String(e){for(let r=0;r<e.length;r++)this.writeUInt16(e.charCodeAt(r));this.writeUInt16(0)}skip(e=0){this.offset+=e}finalize(){return t.buffer.slice(0,this.offset)}}},{}],4:[function(e,r){r.exports=class{constructor(e){this.port=e,this.readyState=WebSocket.CONNECTING,e.onmessage=r=>{const{data:e}=r;"message"===e.event?this.onmessage({data:e.message}):"error"===e.event?this.onerror({message:e.message}):"close"===e.event?this.onclose({code:e.code,reason:e.reason}):"open"===e.event&&(this.readyState=WebSocket.OPEN,this.onopen())},e.start(),this.onopen=this.onmessage=this.onerror=this.onclose=()=>{}}send(e){this.port.postMessage({event:"message",message:e},[e])}close(){this.port.postMessage({event:"close",code:1001,message:"Client closed connection"}),this.port.close(),this.readyState=WebSocket.CLOSED}}},{}],5:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(12):e=new ArrayBuffer(12)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get x(){return Atomics.load(this.buffer,0)}set x(e){Atomics.store(this.buffer,0,e)}get y(){return Atomics.load(this.buffer,1)}set y(e){Atomics.store(this.buffer,1,e)}get scroll(){return Atomics.load(this.buffer,2)}set scroll(e){Atomics.store(this.buffer,2,e)}updateScroll(e){Atomics.add(this.buffer,2,e)}resetScroll(){return Atomics.exchange(this.buffer,2,0)}}},{}],6:[function(e,r){var t=Math.max;const{EventEmitter:a}=e("events"),s=e("../../src/network/reader"),n=e("../../src/network/writer"),o=e("./fake-socket");class i{constructor(e=0){this.score=0,this.state=new ArrayBuffer(e),this.view=new Uint8Array(this.state),this.packetTimestamps=[],this.packets=[]}}class f{constructor(e,r,t){this.t=0,this.i=0,this.encoder=new OffscreenCanvas(0,0),this.encoderCTX=this.encoder.getContext("bitmaprenderer"),this.thumbnail=new ArrayBuffer(0),this.thumbnailUint8View=new Uint8Array(this.thumbnail),this.thumbnailUint8ClampedView=new Uint8ClampedArray(this.thumbnail),this.protocol=r,this.renderer=e,this.source=new Uint8Array(e.core.buffer,0,e.cellDataBufferLength),this.snapshots=Array.from({length:t},()=>new i(this.source.byteLength))}async init(){this.db=await new Promise((e,r)=>{const t=indexedDB.open("ogar69-replay");t.onupgradeneeded=r=>{console.log("Creating replay object store");const e=r.target.result;e.createObjectStore("replay-meta"),e.createObjectStore("replay-data")},t.onsuccess=()=>e(t.result),t.onerror=r}),console.log("Connected to replay database")}resizeBuffer(){this.renderer.RGBABytes>this.thumbnail.byteLength&&(this.thumbnail=new ArrayBuffer(this.renderer.RGBABytes),this.thumbnailUint8View=new Uint8Array(this.thumbnail),this.thumbnailUint8ClampedView=new Uint8ClampedArray(this.thumbnail),this.thumbnailData=new ImageData(new Uint8ClampedArray(this.thumbnail),this.renderer.gl.drawingBufferWidth,this.renderer.gl.drawingBufferHeight))}encodePlayerData(){const e=new n;e.skip(1);const r=this.renderer.playerData.filter((r,t)=>{if(t&&!(250<t)&&r)return e.writeUInt8(t),e.writeUTF16String(r.name||""),e.writeUTF16String(r.skin||""),!0}),t=e.offset;return e.offset=0,e.writeUInt8(r.length),e.offset=t,e.finalize()}async save(){await new Promise(async(e,r)=>{const t=this.snapshots.filter(e=>e.packets.length).map(e=>e),a=t.reduceRight((e,r)=>e.concat(r.packets),[]);let s=t.reduceRight((e,r)=>e.concat(r.packetTimestamps),[]);const n=Math.min(...s);s=s.map(e=>e-n);const o=a.reduce((e,r)=>e+r.byteLength,0),i=this.encodePlayerData(),f=new Float32Array(s).buffer,l=t[t.length-1].state;this.encoder.width=this.thumbnailData.width>>2,this.encoder.height=this.thumbnailData.height>>2,this.encoderCTX.transferFromImageBitmap(await createImageBitmap(this.thumbnailData,{imageOrientation:"flipY",resizeWidth:this.encoder.width,resizeHeight:this.encoder.height,resizeQuality:"high"}));const d=await this.encoder.convertToBlob({type:"image/jpeg",quality:1}),u=l.byteLength+d.size+i.byteLength+f.byteLength+o,p=this.db.transaction(["replay-meta","replay-data"],"readwrite"),E=p.objectStore("replay-meta"),_=p.objectStore("replay-data"),c=Date.now();E.add({date:Date.now(),thumbnail:d,size:u},c),_.add({initial:l,buffers:a,timestamps:f,players:i},c),p.oncomplete=()=>{self.postMessage({event:"replay"}),e()},p.onerror=r})}set score(e){e>this.maxScore&&(this.resizeBuffer(),this.renderer.screenshot(this.thumbnailUint8View)),this.snapshots[0].score=t(e,this.snapshots[0].score)}get maxScore(){return t(...this.snapshots.map(e=>e.score))}recordState(){const e=this.snapshots.pop();this.free(e),this.snapshots.unshift(e),e.view.set(this.source),this.score=this.renderer.stats.score}recordPacket(e,r=performance.now()){this.snapshots[0].packets.push(e),this.snapshots[0].packetTimestamps.push(r)}free(e){this.renderer.loader.postMessage(e.packets,e.packets),e.score=0,e.view.fill(0),e.packets=[],e.packetTimestamps=[]}reset(){this.snapshots.forEach(e=>this.free(e))}async load(e=0){this.renderer.cleanup();const r=await new Promise((r,t)=>{const a=this.db.transaction(["replay-data"],"readonly"),s=a.objectStore("replay-data"),n=s.get(e);a.oncomplete=()=>r(n.result),a.onerror=t}),t=new Uint8Array(r.initial),a=new Float32Array(r.timestamps);this.curr={initial:t,timestamps:a,packets:r.buffers},console.assert(this.curr.timestamps.length===this.curr.packets.length,"Packet and timestamp length MUST match"),this.protocol.parsePlayers(r.players)}update(e=0){if(this.curr){for(this.t||this.source.set(this.curr.initial);this.curr.timestamps[this.i]<this.t;)this.protocol.onMessage({data:this.curr.packets[this.i++]});this.t||this.renderer.teleportCamera(),this.i>=this.curr.timestamps.length?(this.i=0,this.t=0):this.t+=e}}}const l=[2,4];r.exports=class extends a{constructor(e){super(),this.pid=0,this.bandwidth=0,this.renderer=e,this.replay=new f(e,this,10),this.setupIntervals(),this.onMessage=this.onMessage.bind(this)}get connecting(){return this.ws&&this.ws.readyState==WebSocket.CONNECTING}get connected(){return this.ws&&this.ws.readyState==WebSocket.OPEN}disconnect(){this.connected&&this.ws.close(),this.replay.curr=null}connect(e,r="",t=""){this.disconnect();const a=this.ws="string"==typeof e?new WebSocket(e):new o(e);this.ws.binaryType="arraybuffer",this.ws.onopen=()=>{const e=new n;e.writeUInt8(69),e.writeInt16(420),e.writeUTF16String(r),e.writeUTF16String(t),this.ws.send(e.finalize()),this.emit("open"),delete this.ping},this.ws.onmessage=this.onMessage,this.ws.onerror=()=>self.postMessage({event:"error",message:"Connection failed"}),this.ws.onclose=r=>{this.bandwidth=0,delete this.map,delete this.ping,delete this.lastName,delete this.lastSkin,this.emit("close"),this.ws==a&&self.postMessage({event:"disconnect",code:r.code,reason:r.reason})}}setupIntervals(){this.pingInterval=self.setInterval(()=>{if(this.renderer.stats.bandwidth=this.bandwidth,this.bandwidth=0,this.connected&&this.pid&&!this.ping){const e=new ArrayBuffer(1);new Uint8Array(e)[0]=69,this.send(e),this.ping=Date.now(),this.replay.recordState()}},1e3);const e=this.renderer.state;this.mouseInterval=self.setInterval(()=>{if(this.connected&&this.pid){const r=new n;r.writeUInt8(3),r.writeFloat32(this.renderer.cursor.position[0]),r.writeFloat32(this.renderer.cursor.position[1]);const t=e.exchange();r.writeUInt8(t.spectate),r.writeUInt8(t.splits),r.writeUInt8(t.ejects),r.writeUInt8(t.macro),r.writeUInt8(t.lineLock),this.send(r.finalize()),t.respawn&&this.spawn(),t.clip&&this.replay.save()}},1e3/33)}send(e){this.connected&&this.ws.send(e)}onMessage(r){const e=new s(new DataView(r.data)),t=e.readUInt8();switch(this.bandwidth+=r.data.byteLength,!this.replaying&&l.includes(t)&&this.replay.recordPacket(r.data),t){case 1:this.pid=e.readUInt16(),this.map={hw:e.readUInt16(),hh:e.readUInt16()},console.log(`Map Dimension: ${this.map.hw<<1}x${this.map.hh<<1}`);const a=e.readUTF16String();this.emit("protocol"),self.postMessage({event:"connect",server:a});break;case 2:this.renderer.shouldTP=!0,this.renderer.clearCells();break;case 3:const s=e.readUInt16(),n=e.readUTF16String(),o=e.readUTF16String();this.renderer.loadPlayerData({id:s,name:n,skin:o});break;case 4:this.parseCellData(r.data);break;case 5:this.parseLeaderboard(e);break;case 6:this.parseMinimap(e);break;case 7:if(this.parseStats(e),this.renderer.state.auto_respawn){const e=new ArrayBuffer(1);new Uint8Array(e)[0]=7,this.send(e)}break;case 10:const i=e.readUInt16(),f=e.readUTF16String(),d=this.renderer.playerData[i];if(!d)return console.warn(`Received unknown pid: ${i}, message: ${f}`);self.postMessage({event:"chat",pid:i,player:d,message:f});break;case 69:if(!this.ping)return;this.renderer.stats.ping=Date.now()-this.ping,delete this.ping;}}get player(){return this.renderer.playerData[this.pid]}parsePlayers(e){console.log("Parsing players");const r=new s(new DataView(e)),t=r.readUInt8();for(let a=0;a<t;a++){const e={id:r.readUInt8(),name:r.readUTF16String(),skin:r.readUTF16String()};this.renderer.loadPlayerData(e)}}parseCellData(e){this.lastPacket=Date.now();const r=this.renderer.core,t=new DataView(e,1,14);this.renderer.stats.mycells=t.getUint8(0),this.renderer.stats.linelocked=t.getUint8(1),this.renderer.stats.score=t.getFloat32(2,!0),this.renderer.target.position[0]=t.getFloat32(6,!0),this.renderer.target.position[1]=t.getFloat32(10,!0),r.HEAPU8.set(new Uint8Array(e,15),this.renderer.cellTypesTableOffset),r.instance.exports.deserialize(0,this.renderer.cellTypesTableOffset)}parseLeaderboard(e){const r=e.readInt16(),t=e.readUInt8(),a={rank:r,me:this.player,players:[]};for(let r=0;r<t;r++)a.players.push(this.renderer.playerData[e.readUInt8()]);self.postMessage({event:"leaderboard",lb:a})}parseMinimap(e){const r=e.readUInt8(),t=[];for(let a=0;a<r;a++){const r=e.readUInt8(),a=this.renderer.playerData[r]||{};a.id=r,r==this.pid&&(a.me=!0);const s=e.readFloat32(),n=e.readFloat32();a.x=s/(this.map.hw<<1)+.5,a.y=n/(this.map.hh<<1)+.5,a.score=e.readFloat32(),t.push(a)}self.postMessage({event:"minimap",minimap:t})}parseStats(e){const r=e.readUInt32(),t=e.readFloat32(),a=e.readFloat32();self.postMessage({event:"stats",kills:r,score:t,surviveTime:a})}spawn(e=this.lastName,r=this.lastSkin){this.lastName=e,this.lastSkin=r;const t=new n;t.writeUInt8(1),t.writeUTF16String(e),t.writeUTF16String(r),this.send(t.finalize())}sendChat(e){const r=new n;r.writeUInt8(10),r.writeUTF16String(e),this.send(r.finalize()),this.pid&&self.postMessage({event:"chat",pid:this.pid,player:this.player,message:e})}get replaying(){return!!this.replay.curr}async startReplay(e=0){this.disconnect(),console.log("Loading replay"),await this.replay.load(e),console.log("Replay loaded")}}},{"../../src/network/reader":2,"../../src/network/writer":3,"./fake-socket":4,events:1}],7:[function(e,r){var t=Math.max,a=Math.min;self.importScripts&&importScripts("https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js");const s=e("./stats"),n=e("./mouse"),o=e("./state"),i=e("./viewport"),f=e("./protocol"),l=e("./wasm-core"),d=e("./texture-store"),{makeProgram:u,pick:p,getColor:E}=e("./util"),{CELL_VERT_SHADER_SOURCE:_,CELL_FRAG_PEELING_SHADER_SOURCE:m,NAME_VERT_SHADER_SOURCE:T,NAME_FRAG_PEELING_SHADER_SOURCE:g,MASS_VERT_SHADER_SOURCE:R,MASS_FRAG_PEELING_SHADER_SOURCE:b,QUAD_VERT_SHADER_SOURCE:A,BLEND_BACK_FRAG_SHADER_SOURCE:h,FINAL_FRAG_SHADER_SOURCE:U,BORDER_VERT_SHADER_SOURCE:B,BORDER_FRAG_SHADER_SOURCE:F}=e("./shaders"),L=0,D=.25,S=-.33,C=256,v=65536,O=30,I=65536,P=-99999,M=["0","1","2","3","4","5","6","7","8","9",".","k"],N=M.length;class k{constructor(e){this.canvas=e,this.fbo=new Map,this.buffers=new Map,this.uniforms=new Map,this.playerData=Array.from({length:256}),this.playerData[0]={name:"Server"},this.updates=[],this.stats=new s,this.mouse=new n,this.state=new o,this.viewport=new i,this.core=new l(this),this.viewbox={t:0,b:0,l:0,r:0},this.initLoader(),this.drawCells=this.drawCells.bind(this),this.drawNames=this.drawNames.bind(this),this.drawMass=this.drawMass.bind(this),this.fps=0,this.fpsInterval=setInterval(()=>{this.stats.fps=this.fps,this.fps=0},1e3)}start(){if(this.r)return!1;const e=r=>{this.r=requestAnimationFrame(e);try{this.render(r)}catch(r){this.stop(),console.error(r)}};return this.r=requestAnimationFrame(e),!0}stop(){return!!this.r&&(this.r=cancelAnimationFrame(this.r),!0)}loadPlayerData({id:e,skin:r,name:t,persist:a}){this.IGNORE_SKIN&&250>=e&&(r="");const s=this.playerData[e];s?(this.store.replace(s.name,t)&&this.loader.postMessage({id:e,name:t}),this.store.replace(s.skin,r)&&this.loader.postMessage({id:e,skin:r})):(this.store.add(t,a)&&this.loader.postMessage({id:e,name:t}),this.store.add(r,a)&&this.loader.postMessage({id:e,skin:r})),this.playerData[e]={skin:r,name:t}}initLoader(){this.loader=new Worker(self.window?"js/loader.min.js":"loader.min.js"),this.loader.onmessage=r=>this.updates.unshift(r.data)}loadUniform(e,r){this.uniforms.has(e)||this.uniforms.set(e,new Map),this.uniforms.get(e).set(r,this.gl.getUniformLocation(e,r))}getUniform(e,r){return this.uniforms.get(e).get(r)}async initEngine(){const e=this.gl=this.canvas.getContext("webgl2",{premultipliedAlpha:!1,powerPreference:"high-performance",preserveDrawingBuffer:!0});if(!e)return console.error("WebGL2 Not Supported");console.log("Loading WASM..."),await this.core.load(),console.log("Loading font");let r=new FontFace("Bree Serif","url(/static/font/BreeSerif-Regular.ttf)");if(self.fonts&&fonts.add(r),await r.load(),r=new FontFace("Lato","url(/static/font/Lato-Bold.ttf)"),self.fonts&&fonts.add(r),await r.load(),!self.mat4){console.log("Loading glMatrix library");const e=document.createElement("script");e.src="https://cdnjs.cloudflare.com/ajax/libs/gl-matrix/2.8.1/gl-matrix-min.js",document.body.appendChild(e),await new Promise(r=>e.onload=r)}if(this.cursor={position:vec3.create()},this.target={position:vec3.create(),scale:10},this.camera={position:vec3.create(),scale:10},this.shouldTP=!1,this.proj=mat4.create(),this.bots={names:[],skins:[]},this.IGNORE_SKIN=this.state.ignore_skin,this.SKIN_DIM=this.state.skin_dim,this.BYTES_PER_CELL_DATA=this.core.instance.exports.bytes_per_cell_data(),this.BYTES_PER_RENDER_CELL=this.core.instance.exports.bytes_per_render_cell(),this.cellDataBufferLength=this.cellTypesTableOffset=v*this.BYTES_PER_CELL_DATA,console.log(`Table offset: ${this.cellTypesTableOffset}`),this.cellBufferOffset=this.cellTypesTableOffset+2*C,console.log(`Render buffers offset: ${this.cellBufferOffset}`),this.cellBufferEnd=this.cellBufferOffset+v*this.BYTES_PER_RENDER_CELL,console.log(`Render buffer end ${this.cellBufferEnd}`),this.nameBufferOffset=this.cellBufferEnd+2*C,this.nameBufferEnd=this.nameBufferOffset+v*this.BYTES_PER_RENDER_CELL,console.log(`Memory allocated: ${this.core.buffer.byteLength} bytes`),this.cellTypesTable=new Uint16Array(this.core.buffer,this.cellTypesTableOffset,C),this.nameTypesTable=new Uint16Array(this.core.buffer,this.cellBufferEnd,C),this.renderBuffer=this.core.HEAPU8.subarray(this.cellBufferOffset,this.cellBufferEnd),this.renderBufferView=new DataView(this.core.buffer,this.cellBufferOffset,v*this.BYTES_PER_RENDER_CELL),this.massWidthsTable=new Map,this.massBuffer=new Float32Array(new ArrayBuffer(128*v)),this.store=new d(this),!e.getExtension("EXT_color_buffer_float"))return void console.error("FLOAT color buffer not available");e.enable(e.BLEND),e.depthMask(!1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.blendFunc(e.ONE,e.ONE_MINUS_SRC_ALPHA);const t=this.peel_prog1=u(e,_,m),a=this.peel_prog2=u(e,T,g),s=this.peel_prog3=u(e,R,b),n=this.blend_prog=u(e,A,h),o=this.final_prog=u(e,A,U),i=this.border_prog=u(e,B,F);for(const e of[t,a,s])this.loadUniform(e,"u_proj"),this.loadUniform(e,"u_depth"),this.loadUniform(e,"u_front_color");this.loadUniform(t,"u_skin"),this.loadUniform(t,"u_circle"),this.loadUniform(t,"u_circle_color"),this.loadUniform(a,"u_dim"),this.loadUniform(a,"u_name"),this.loadUniform(s,"u_uvs"),this.loadUniform(s,"u_mass_char"),this.loadUniform(n,"u_back_color"),this.loadUniform(i,"u_map"),this.loadUniform(i,"u_proj"),this.loadUniform(i,"u_color"),this.loadUniform(o,"u_front_color"),this.loadUniform(o,"u_back_color"),this.setUpPeelingBuffers(),this.generateQuadVAO(),this.generateMassVAO(),this.generateCircleTexture(),this.generateMassTextures(),this.allocBuffer("cell_data_buffer"),e.bindVertexArray(this.quadVAO),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferData(e.ARRAY_BUFFER,this.renderBuffer,e.DYNAMIC_DRAW),e.vertexAttribPointer(1,3,e.FLOAT,!1,0,0),e.vertexAttribDivisor(1,2),e.enableVertexAttribArray(1),e.useProgram(t),e.uniform1i(this.getUniform(t,"u_circle"),10),e.uniform1i(this.getUniform(t,"u_skin"),11),e.useProgram(a),e.uniform1i(this.getUniform(a,"u_name"),12),e.useProgram(s),e.uniform1i(this.getUniform(s,"u_mass_char"),13),e.useProgram(o),e.uniform1i(this.getUniform(o,"u_back_color"),6),e.activeTexture(e.TEXTURE11),this.empty_texture=e.createTexture(),e.bindTexture(e.TEXTURE_2D,this.empty_texture),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,null);const l=12/255;e.useProgram(i),e.uniform4f(this.getUniform(i,"u_color"),l,l,l,1),this.loadPlayerData({id:253,skin:`/static/img/virus-${this.SKIN_DIM}.png`,persist:!0}),this.start(),this.protocol=new f(this),this.protocol.on("close",this.cleanup.bind(this)),await this.protocol.replay.init()}cleanup(){this.protocol.replaying||(this.clearCells(),this.clearScreen(),this.clearPlayerData(),this.store.clear(),this.stats.reset())}teleportCamera(){this.camera.scale=this.target.scale,this.camera.position.set(this.target.position),this.shouldTP=!1}clearCells(){this.core.HEAPU32.fill(0),this.massBuffer.fill(0)}clearPlayerData(){for(let e=1;250>=e;e++)this.playerData[e]=void 0}randomPlayer(){return{skin:p(this.bots.skins),name:p(this.bots.names)}}async genCells(){for(let e=1;256>e;e++)this.loadPlayerData({id:e,...this.randomPlayer()});this.GEN_CELLS=65536;const e=new DataView(this.core.buffer,0,this.GEN_CELLS*this.BYTES_PER_CELL_DATA),r=(e,r)=>Math.random()*(r-e)+e;for(let t=0;t<this.GEN_CELLS;t++){const a=this.BYTES_PER_CELL_DATA*t,s=~~(255*Math.random()+1),n=~~r(-I,I)+s/10,o=~~r(-I,I)+s/10,i=r(O,O+200);e.setUint32(0+a,s,!0),e.setFloat32(4+a,n,!0),e.setFloat32(8+a,o,!0),e.setFloat32(12+a,i,!0),e.setFloat32(16+a,n,!0),e.setFloat32(20+a,o,!0),e.setFloat32(24+a,i,!0),e.setFloat32(28+a,n,!0),e.setFloat32(32+a,o,!0),e.setFloat32(36+a,i,!0)}}get RGBABytes(){return 4*(this.gl.drawingBufferWidth*this.gl.drawingBufferHeight)}screenshot(e){const r=this.gl;r.readPixels(0,0,r.drawingBufferWidth,r.drawingBufferHeight,r.RGBA,r.UNSIGNED_BYTE,e)}allocBuffer(e){if(this.buffers.has(e))throw new Error(`Already allocated buffer "${e}"`);const r=this.gl.createBuffer();return this.buffers.set(e,r),r}allocFrameBuffer(e,r=1){if(this.fbo.has(e))throw new Error(`Already allocated framebuffer "${e}"`);this.fbo.set(e,1==r?this.gl.createFramebuffer():Array.from({length:r},()=>this.gl.createFramebuffer()))}freeFrameBuffer(e){if(!this.fbo.has(e))throw new Error(`Trying to free none existing framebuffer "${e}`);const r=this.fbo.get(e);if(Array.isArray(r))for(const e of r)this.gl.deleteFramebuffer(e);else this.gl.deleteFramebuffer(r);this.fbo.delete(e)}rellocPeelingBuffers(e,r){e<=this.FBO_WIDTH&&r<=this.FBO_HEIGHT||(console.log(`Reallocating framebuffers to [${e}, ${r}]`),this.freeFrameBuffer("peel_depths"),this.freeFrameBuffer("peel_colors"),this.freeFrameBuffer("blend_back"),this.setUpPeelingBuffers(e,r))}setUpPeelingBuffers(e=1920,r=1080){this.FBO_WIDTH=e,this.FBO_HEIGHT=r,this.allocFrameBuffer("peel_depths",2),this.allocFrameBuffer("peel_colors",2),this.allocFrameBuffer("blend_back");const t=this.gl,a=()=>{t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)};for(let s=0;2>s;s++){t.bindFramebuffer(t.FRAMEBUFFER,this.fbo.get("peel_depths")[s]);const n=3*s,o=t.createTexture();t.activeTexture(t.TEXTURE0+n),t.bindTexture(t.TEXTURE_2D,o),a(),t.texImage2D(t.TEXTURE_2D,0,t.RG32F,e,r,0,t.RG,t.FLOAT,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,o,0);const i=t.createTexture();t.activeTexture(t.TEXTURE1+n),t.bindTexture(t.TEXTURE_2D,i),a(),t.texImage2D(t.TEXTURE_2D,0,t.RGBA16F,e,r,0,t.RGBA,t.HALF_FLOAT,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT1,t.TEXTURE_2D,i,0);const f=t.createTexture();t.activeTexture(t.TEXTURE2+n),t.bindTexture(t.TEXTURE_2D,f),a(),t.texImage2D(t.TEXTURE_2D,0,t.RGBA16F,e,r,0,t.RGBA,t.HALF_FLOAT,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT2,t.TEXTURE_2D,f,0),t.bindFramebuffer(t.FRAMEBUFFER,this.fbo.get("peel_colors")[s]),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i,0),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT1,t.TEXTURE_2D,f,0)}{t.bindFramebuffer(t.FRAMEBUFFER,this.fbo.get("blend_back"));const s=t.createTexture();t.activeTexture(t.TEXTURE6),t.bindTexture(t.TEXTURE_2D,s),a(),t.texImage2D(t.TEXTURE_2D,0,t.RGBA16F,e,r,0,t.RGBA,t.HALF_FLOAT,null),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,s,0),t.bindFramebuffer(t.FRAMEBUFFER,null)}}clearPeelingBuffers(){const e=this.gl;e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("blend_back")),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0]),e.clearColor(P,P,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[1]),e.clearColor(-0,1,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0,e.COLOR_ATTACHMENT1]),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[1]),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[0]),e.drawBuffers([e.COLOR_ATTACHMENT0]),e.blendEquation(e.MAX);for(const r of[this.peel_prog1,this.peel_prog2,this.peel_prog3])e.useProgram(r),e.uniform1i(this.getUniform(r,"u_depth"),3),e.uniform1i(this.getUniform(r,"u_front_color"),4)}generateQuadVAO(){const e=this.gl,r=this.quadVAO=e.createVertexArray();e.bindVertexArray(r);const t=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,1,-1,-1,1,-1,-1,1,1,-1,1,1]),e.STATIC_DRAW);{const r=e.FLOAT;e.vertexAttribPointer(0,2,r,!1,0,0),e.enableVertexAttribArray(0)}}generateMassVAO(){const e=this.gl,r=this.massVAO=e.createVertexArray();e.bindVertexArray(r);const t=this.allocBuffer("mass_buffer");e.bindBuffer(e.ARRAY_BUFFER,t),e.bufferData(e.ARRAY_BUFFER,this.massBuffer,e.DYNAMIC_DRAW);{const r=e.FLOAT;e.vertexAttribPointer(0,4,r,!1,0,0),e.enableVertexAttribArray(0)}}generateCircleTexture(){const e=this.gl,r=e.createTexture();e.activeTexture(e.TEXTURE10),e.bindTexture(e.TEXTURE_2D,r);{const r=this.state.circle_radius;console.log(`Generating ${r<<1}x${r<<1} circle texture`);const t=self.window?document.createElement("canvas"):new OffscreenCanvas(r<<1,r<<1);self.window&&(t.width=t.height=r<<1);const a=t.getContext("2d");a.fillStyle="white",a.arc(r,r,r,0,2*Math.PI,!1),a.fill(),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),e.generateMipmap(e.TEXTURE_2D),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR)}}generateMassTextures(){console.log("Generating mass characters");const e=this.gl,r=e.createTexture();e.activeTexture(e.TEXTURE13),e.bindTexture(e.TEXTURE_2D_ARRAY,r);const t=320,a=320;{e.texImage3D(e.TEXTURE_2D_ARRAY,0,e.RGBA,t,a,N,0,e.RGBA,e.UNSIGNED_BYTE,null);const r=self.window?document.createElement("canvas"):new OffscreenCanvas(t,a);self.window&&(r.width=t,r.height=a);const s=r.getContext("2d");s.font="bold 280px Lato",s.fillStyle="white",s.strokeStyle="black",s.textAlign="center",s.lineWidth=30,s.textBaseline="middle";const n=new Float32Array(2*(4*N));for(let o=0;o<N;o++){const i=M[o];s.clearRect(0,0,r.width,r.height),s.strokeText(i,r.width>>1,r.height>>1),s.fillText(i,r.width>>1,r.height>>1);const f=(s.measureText(i).width+20)/r.width;this.massWidthsTable.set(i,f),e.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,o,t,a,1,e.RGBA,e.UNSIGNED_BYTE,r);const l=.5-f/2,d=.5+f/2,u=0,p=1;n[8*o+0]=l,n[8*o+1]=u,n[8*o+2]=d,n[8*o+3]=u,n[8*o+4]=l,n[8*o+5]=p,n[8*o+6]=d,n[8*o+7]=p}e.generateMipmap(e.TEXTURE_2D_ARRAY),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D_ARRAY,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.useProgram(this.peel_prog3),e.uniform2fv(this.getUniform(this.peel_prog3,"u_uvs"),n)}}screenToWorld(e=vec3.create(),r=0,t=0){const a=mat4.create();mat4.invert(a,this.proj),vec3.transformMat4(e,[r,-t,0],a)}updateTarget(){this.screenToWorld(this.cursor.position,2*(this.mouse.x/this.viewport.width)-1,2*(this.mouse.y/this.viewport.height)-1);const e=this.mouse.resetScroll();this.target.scale*=1+e/1e3,this.target.scale=a(t(this.target.scale,.01),1e4)}lerpCamera(e=1/60,r){const s=a(t(e*this.state.zoom,0),1);vec3.lerp(this.camera.position,this.camera.position,this.target.position,e),this.camera.scale+=(this.target.scale-this.camera.scale)*s;const n=r?r.x:this.camera.position[0],o=r?r.y:this.camera.position[1],i=this.viewport.width*this.camera.scale/2,f=this.viewport.height*this.camera.scale/2,l=this.viewbox;mat4.ortho(this.proj,l.l=n-i,l.r=n+i,l.b=o-f,l.t=o+f,0,1)}checkViewport(){const e=this.gl;(e.canvas.width!=this.viewport.width||e.canvas.height!=this.viewport.height)&&(e.canvas.width=this.viewport.width,e.canvas.height=this.viewport.height)}drawCells(){const e=this.gl;e.bindVertexArray(this.quadVAO),e.activeTexture(e.TEXTURE11),this.state.skin||e.bindTexture(e.TEXTURE_2D,this.empty_texture);for(let r=1;r<C;r++){let t=this.cellTypesTable[r-1],a=this.cellTypesTable[r];if(t==a)continue;a||(a=65536);const s=this.cellBufferOffset+t*this.BYTES_PER_RENDER_CELL,n=new Float32Array(this.core.buffer,s,3*(a-t));if(253==r)e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),0,0,0,0);else if(251==r)e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),.5,.5,.5,.5);else{const t=E(r);e.uniform4f(this.getUniform(this.peel_prog1,"u_circle_color"),t[0],t[1],t[2],1)}const o=this.store.get(this.playerData[r]&&this.playerData[r].skin),i=!(this.state.skin||250<r)||!o||!o.tex;e.bindTexture(e.TEXTURE_2D,i?this.empty_texture:o.tex),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,n),e.bindBuffer(e.ARRAY_BUFFER,null);const f=2*(a-t);e.drawArraysInstanced(e.TRIANGLES,0,6,f)}}drawNames(){const e=this.gl;e.bindVertexArray(this.quadVAO),e.activeTexture(e.TEXTURE12);for(let r=1;r<C;r++){if(!this.playerData[r])continue;let t=this.nameTypesTable[r-1],a=this.nameTypesTable[r];if(t==a)continue;a||(a=65536);const s=this.store.get(this.playerData[r]&&this.playerData[r].name);if(!s||!s.tex)continue;this.state.name&&250>=r&&e.bindTexture(e.TEXTURE_2D,s?s.tex:this.empty_texture);const n=this.nameBufferOffset+t*this.BYTES_PER_RENDER_CELL,o=new Float32Array(this.core.buffer,n,3*(a-t));e.uniform4f(this.getUniform(this.peel_prog2,"u_dim"),s.dim[0]/512,s.dim[1]/512,.25,-.03),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("cell_data_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,o),e.bindBuffer(e.ARRAY_BUFFER,null);const i=2*(a-t);e.drawArraysInstanced(e.TRIANGLES,0,6,i)}}drawMass(){const e=this.renderMassBuffer.length>>2;if(!(e%3)&&e){const e=this.gl;e.bindVertexArray(this.massVAO),e.bindBuffer(e.ARRAY_BUFFER,this.buffers.get("mass_buffer")),e.bufferSubData(e.ARRAY_BUFFER,0,this.renderMassBuffer),e.bindBuffer(e.ARRAY_BUFFER,null),e.drawArrays(e.TRIANGLES,0,this.renderMassBuffer.length>>2)}}buildMassBuffer(e){let r=0;for(let t=0;t<e.length;t+=4){const a=e[t],s=e[t+1],n=e[t+2],o=this.state.mass-1?Math.floor(e[t+3]).toString():1e3<e[t+3]?(e[t+3]/1e3).toFixed(1)+"k":e[t+3];let f=(o.length-1)*L*D;for(let e=0;e<o.length;e++)f+=D*this.massWidthsTable.get(o[e]);let l=-f/2;for(let e=0;e<o.length;e++){const t="."==o[e]?10:"k"==o[e]?11:~~o[e],i=this.massWidthsTable.get(o[e]),f=l*n,d=f+D*i*n,u=(+.5*D+S)*n,p=(-.5*D+S)*n;l+=D*i+L,this.massBuffer[r++]=a+f,this.massBuffer[r++]=s+u,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+0,this.massBuffer[r++]=a+d,this.massBuffer[r++]=s+u,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+1,this.massBuffer[r++]=a+f,this.massBuffer[r++]=s+p,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+2,this.massBuffer[r++]=a+d,this.massBuffer[r++]=s+u,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+1,this.massBuffer[r++]=a+f,this.massBuffer[r++]=s+p,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+2,this.massBuffer[r++]=a+d,this.massBuffer[r++]=s+p,this.massBuffer[r++]=n,this.massBuffer[r++]=4*t+3}}this.renderMassBuffer=this.massBuffer.subarray(0,r)}render(e){if(!this.lastTimestamp)return void(this.lastTimestamp=e);this.fps++;const r=e-this.lastTimestamp;this.protocol.replay.update(r),this.lastTimestamp=e,this.cellTypesTable.fill(0),this.nameTypesTable.fill(0);const t=this.protocol.lastPacket?(Date.now()-this.protocol.lastPacket)/this.state.draw:0,a=this.core.instance.exports.draw_cells(0,this.cellTypesTableOffset,this.cellBufferOffset,t,this.viewbox.t,this.viewbox.b,this.viewbox.l,this.viewbox.r);let s=0;this.updateTarget();if(this.shouldTP?this.teleportCamera():this.lerpCamera(r/this.state.draw,null),this.checkViewport(),!this.state.focused&&(this.updateTextures(),100>e-this.lastDraw))return;const n=this.gl;n.viewport(0,0,n.drawingBufferWidth,n.drawingBufferHeight),this.rellocPeelingBuffers(n.drawingBufferWidth,n.drawingBufferHeight);let o;this.clearPeelingBuffers();const i=[this.peel_prog1],f=[this.drawCells];(this.state.mass||this.state.name)&&(s=this.core.instance.exports.draw_text(0,this.cellTypesTableOffset,this.cellBufferEnd,this.nameBufferOffset,this.nameBufferEnd,.03,this.viewbox.t,this.viewbox.b,this.viewbox.l,this.viewbox.r),this.state.name&&(i.push(this.peel_prog2),f.push(this.drawNames)),this.state.mass&&(this.buildMassBuffer(new Float32Array(this.core.buffer,this.nameBufferEnd,4*s)),i.push(this.peel_prog3),f.push(this.drawMass))),o=this.depthPeelRender(2,i,f),this.stats.cells=a,this.stats.text=s,this.clearScreen(),n.blendFunc(n.ONE,n.ONE_MINUS_SRC_ALPHA),n.bindVertexArray(this.quadVAO),this.protocol.map&&(n.useProgram(this.border_prog),n.uniform2f(this.getUniform(this.border_prog,"u_map"),this.protocol.map.hw,this.protocol.map.hh),n.uniformMatrix4fv(this.getUniform(this.border_prog,"u_proj"),!1,this.proj),n.drawArrays(n.TRIANGLES,0,6)),n.useProgram(this.final_prog),n.uniform1i(this.getUniform(this.final_prog,"u_front_color"),o+1),n.drawArrays(n.TRIANGLES,0,6),this.updateTextures(),this.lastDraw=e}updateTextures(){const e=this.gl;if(this.updates.length){e.activeTexture(e.TEXTURE11);for(let e=2;this.updates.length&&e--;){const{id:r,skin:t,name:a}=this.updates.pop(),s=this.playerData[r];if(s&&(this.store.setData(s.skin,t),this.store.setData(s.name,a)),2<++e)break}}}depthPeelRender(e=4,r,t){const a=this.gl;for(let s in r)a.useProgram(r[s]),a.uniformMatrix4fv(this.getUniform(r[s],"u_proj"),!1,this.proj),t[s](!0);let s,n,o,i;for(let f=0;f<e;f++){for(let e in s=f%2,n=1-s,a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[n]),a.drawBuffers([a.COLOR_ATTACHMENT0]),a.clearColor(P,P,0,0),a.clear(a.COLOR_BUFFER_BIT),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_colors")[n]),a.drawBuffers([a.COLOR_ATTACHMENT0,a.COLOR_ATTACHMENT1]),a.clearColor(0,0,0,0),a.clear(a.COLOR_BUFFER_BIT),a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("peel_depths")[n]),a.drawBuffers([a.COLOR_ATTACHMENT0,a.COLOR_ATTACHMENT1,a.COLOR_ATTACHMENT2]),a.blendEquation(a.MAX),o=3*s,r)a.useProgram(r[e]),a.uniform1i(this.getUniform(r[e],"u_depth"),o),a.uniform1i(this.getUniform(r[e],"u_front_color"),o+1),t[e]();i=3*n,a.bindFramebuffer(a.DRAW_FRAMEBUFFER,this.fbo.get("blend_back")),a.drawBuffers([a.COLOR_ATTACHMENT0]),a.blendEquation(a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA),a.useProgram(this.blend_prog),a.uniform1i(this.getUniform(this.blend_prog,"u_back_color"),i+2),a.bindVertexArray(this.quadVAO),a.drawArrays(a.TRIANGLES,0,6)}return i}clearScreen(){const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT)}}self.window?self.Renderer=k:self.addEventListener("message",async function(r){const{data:e}=r,t=self.r=new k(e.offscreen);t.stats.setBuffer(e.stats),t.mouse.setBuffer(e.mouse),t.state.setBuffer(e.state),t.viewport.setBuffer(e.viewport),await t.initEngine(),self.addEventListener("message",r=>{const e=t.protocol;r.data.connect&&!e.connecting&&e.connect(r.data.connect,r.data.name,r.data.skin),r.data.spawn&&(e.connecting?e.once("protocol",()=>e.spawn(r.data.name,r.data.skin)):e.spawn(r.data.name,r.data.skin)),r.data.chat&&e.sendChat(r.data.chat),r.data.replay&&e.startReplay(r.data.replay)}),self.postMessage({event:"ready"})},{once:!0}),r.exports=k},{"./mouse":5,"./protocol":6,"./shaders":8,"./state":9,"./stats":10,"./texture-store":11,"./util":12,"./viewport":13,"./wasm-core":14}],8:[function(e,r){r.exports.CELL_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform mat4 u_proj;

layout(location=0) in vec2 a_position;
layout(location=1) in vec3 a_data;

out vec2 v_texcoord;

void main() {

    vec4 world_pos = vec4(a_position * a_data.z + a_data.xy, -1.0 / pow(a_data.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;

    // Map from -1 to 1 -> 0 to 1
    v_texcoord = (vec2(a_position.x, -a_position.y) + 1.0) / 2.0;
}
`,r.exports.CELL_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;

#define MAX_DEPTH 99999.0

uniform vec4 u_circle_color;

uniform sampler2D u_skin;
uniform sampler2D u_circle;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {

    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;
    vec4 circle = texture(u_circle, v_texcoord);

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || circle.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }
    vec4 skin = texture(u_skin, v_texcoord);
    vec4 color = vec4(mix(u_circle_color.rgb * u_circle_color.a, skin.rgb, skin.a), 
        mix(skin.a, circle.a, u_circle_color.a));

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.NAME_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform mat4 u_proj;
uniform vec4 u_dim;

layout(location=0) in vec2 a_position;
layout(location=1) in vec3 a_data;

out vec2 v_texcoord;

void main() {
    vec2 obj_pos = a_position * u_dim.xy * u_dim.z + vec2(0, u_dim.w);
    vec4 world_pos = vec4(obj_pos * a_data.z + a_data.xy, -1.0 / pow(a_data.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;

    v_texcoord = (vec2(a_position.x, -a_position.y) + 1.0) / 2.0;
}
`,r.exports.NAME_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;

#define MAX_DEPTH 99999.0

uniform sampler2D u_name;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {
    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;

    vec4 color = texture(u_name, v_texcoord);

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || color.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.MASS_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;
precision highp int;

uniform mat4 u_proj;
uniform vec2 u_uvs[48];

layout(location=0) in vec4 a_position;

out vec2 v_texcoord;
flat out int character;

void main() {
    vec4 world_pos = vec4(a_position.xy, -1.0 / pow(a_position.z, 0.333f), 1.0);
    gl_Position = u_proj * world_pos;
    character = int(a_position.w) >> 2;
    v_texcoord = u_uvs[int(a_position.w)];
}
`,r.exports.MASS_FRAG_PEELING_SHADER_SOURCE=`#version 300 es

precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler2DArray;

#define MAX_DEPTH 99999.0

uniform sampler2DArray u_mass_char;

uniform sampler2D u_depth;
uniform sampler2D u_front_color;

in vec2 v_texcoord;
flat in int character;

layout(location=0) out vec2 depth;  // RG32F, R - negative front depth, G - back depth
layout(location=1) out vec4 frontColor;
layout(location=2) out vec4 backColor;

void main() {
    float fragDepth = gl_FragCoord.z;   // 0 - 1

    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec2 lastDepth = texelFetch(u_depth, fragCoord, 0).rg;
    vec4 lastFrontColor = texelFetch(u_front_color, fragCoord, 0);

    // depth value always increases
    // so we can use MAX blend equation
    depth.rg = vec2(-MAX_DEPTH);

    // front color always increases
    // so we can use MAX blend equation
    frontColor = lastFrontColor;

    // back color is separately blend afterwards each pass
    backColor = vec4(0.0);

    float nearestDepth = -lastDepth.x;
    float furthestDepth = lastDepth.y;
    float alphaMultiplier = 1.0 - lastFrontColor.a;

    vec4 color = texture(u_mass_char, vec3(v_texcoord, character));

    if (fragDepth < nearestDepth || fragDepth > furthestDepth || color.a == 0.0f) {
        // Skip this depth since it's been peeled.
        return;
    }

    if (fragDepth > nearestDepth && fragDepth < furthestDepth) {
        // This needs to be peeled.
        // The ones remaining after MAX blended for 
        // all need-to-peel will be peeled next pass.
        depth.rg = vec2(-fragDepth, fragDepth);
        return;
    }

    if (fragDepth == nearestDepth) {
        frontColor.rgb += color.rgb * color.a * alphaMultiplier;
        frontColor.a = 1.0 - alphaMultiplier * (1.0 - color.a);
    } else {
        backColor += color;
    }
}
`,r.exports.QUAD_VERT_SHADER_SOURCE=`#version 300 es
layout(location=0) in vec4 aPosition;
void main() {
    gl_Position = aPosition;
}`,r.exports.BLEND_BACK_FRAG_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform sampler2D u_back_color;

out vec4 fragColor;
void main() {
    fragColor = texelFetch(u_back_color, ivec2(gl_FragCoord.xy), 0);
    if (fragColor.a == 0.0) { 
        discard;
    }
}
`,r.exports.FINAL_FRAG_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform sampler2D u_front_color;
uniform sampler2D u_back_color;

out vec4 fragColor;
void main() {
    ivec2 fragCoord = ivec2(gl_FragCoord.xy);
    vec4 frontColor = texelFetch(u_front_color, fragCoord, 0);
    vec4 backColor = texelFetch(u_back_color, fragCoord, 0);
    float alphaMultiplier = 1.0 - frontColor.a;

    fragColor = vec4(
        frontColor.rgb + alphaMultiplier * backColor.rgb,
        frontColor.a + backColor.a
    );
}`,r.exports.BORDER_VERT_SHADER_SOURCE=`#version 300 es
precision highp float;

layout(location=0) in vec2 a_position;
uniform mat4 u_proj;
uniform vec2 u_map;
void main() {
    vec4 world_pos = vec4(a_position * u_map, 0.0, 1.0);
    gl_Position = u_proj * world_pos;
}
`,r.exports.BORDER_FRAG_SHADER_SOURCE=`#version 300 es
precision highp float;

uniform vec4 u_color;
out vec4 color;
void main() {
    color = u_color;
}
`},{}],9:[function(e,r){r.exports=class{constructor(){this.setBuffer(),this.quality=0}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(100):e=new ArrayBuffer(100)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get resolution(){return[1,.9,.8,.7,.6,.5][this.quality]||1}get spectate(){return Atomics.load(this.buffer,0)}set spectate(e){Atomics.store(this.buffer,0,e)}get splits(){return Atomics.load(this.buffer,1)}set splits(e){Atomics.add(this.buffer,1,e)}get ejects(){return Atomics.load(this.buffer,2)}set ejects(e){Atomics.add(this.buffer,2,e)}get macro(){return Atomics.load(this.buffer,3)}set macro(e){Atomics.store(this.buffer,3,e)}get respawn(){return Atomics.load(this.buffer,4)}set respawn(e){Atomics.store(this.buffer,4,e)}get focused(){return Atomics.load(this.buffer,5)}set focused(e){Atomics.store(this.buffer,5,e)}get lineLock(){return Atomics.load(this.buffer,6)}set lineLock(e){Atomics.store(this.buffer,6,e)}get skin(){return Atomics.load(this.buffer,7)}set skin(e){Atomics.store(this.buffer,7,e)}get name(){return Atomics.load(this.buffer,8)}set name(e){Atomics.store(this.buffer,8,e)}get mass(){return Atomics.load(this.buffer,9)}set mass(e){Atomics.store(this.buffer,9,e)}get draw(){return Atomics.load(this.buffer,10)}set draw(e){Atomics.store(this.buffer,10,e)}get zoom(){return Atomics.load(this.buffer,11)}set zoom(e){Atomics.store(this.buffer,11,e)}get auto_respawn(){return Atomics.load(this.buffer,12)}set auto_respawn(e){Atomics.store(this.buffer,12,e)}get clip(){return Atomics.load(this.buffer,13)}set clip(e){Atomics.store(this.buffer,13,e)}get skin_quality(){return Atomics.load(this.buffer,14)}set skin_quality(e){Atomics.store(this.buffer,14,e)}get text_quality(){return Atomics.load(this.buffer,15)}set text_quality(e){Atomics.store(this.buffer,15,e)}get circle_quality(){return Atomics.load(this.buffer,16)}set circle_quality(e){Atomics.store(this.buffer,16,e)}get circle_radius(){return[1024,512,256,128][this.circle_quality]}get skin_dim(){return[1024,512,256,128][this.skin_quality]}get ignore_skin(){return Atomics.load(this.buffer,17)}set ignore_skin(e){Atomics.store(this.buffer,17,e)}exchange(){return{spectate:Atomics.exchange(this.buffer,0,0),splits:Atomics.exchange(this.buffer,1,0),ejects:Atomics.exchange(this.buffer,2,0),macro:this.macro,respawn:Atomics.exchange(this.buffer,4,0),lineLock:Atomics.exchange(this.buffer,6,0),clip:Atomics.exchange(this.buffer,13,0)}}}},{}],10:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(32):e=new ArrayBuffer(32)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get fps(){return Atomics.load(this.buffer,0)}set fps(e){Atomics.store(this.buffer,0,e)}get ping(){return Atomics.load(this.buffer,1)}set ping(e){Atomics.store(this.buffer,1,e)}get cells(){return Atomics.load(this.buffer,2)}set cells(e){Atomics.store(this.buffer,2,e)}get text(){return Atomics.load(this.buffer,3)}set text(e){Atomics.store(this.buffer,3,e)}get bandwidth(){return Atomics.load(this.buffer,4)}set bandwidth(e){Atomics.store(this.buffer,4,e)}get mycells(){return Atomics.load(this.buffer,5)}set mycells(e){Atomics.store(this.buffer,5,e)}get linelocked(){return Atomics.load(this.buffer,6)}set linelocked(e){Atomics.store(this.buffer,6,e)}get score(){return Atomics.load(this.buffer,7)}set score(e){Atomics.store(this.buffer,7,e)}reset(){this.buffer.fill(0)}}},{}],11:[function(e,r){class t{constructor(e,r="",t=!1){this.store=e,this.persist=t,this.key=r,this.tex=null,this.dim=[0,0],this.ref=1}incre(){this.persist||this.ref++}decre(){if(!this.persist)return this.ref--,!!(0>=this.ref)&&this.destroy()}destroy(){return!this.persist&&!!this.tex&&(this.store.gl.deleteTexture(this.tex),this.tex=null,!0)}}r.exports=class{constructor(e){this.renderer=e,this.textures=new Map}get gl(){return this.renderer.gl}add(e="",r=!1){return e?this.textures.has(e)?(this.textures.get(e).incre(),!1):(this.textures.set(e,new t(this,e,r)),!0):void 0}get(e=""){return this.textures.get(e)}setData(e="",r){if(r){const t=this.get(e);if(t){const e=this.gl;e.bindTexture(e.TEXTURE_2D,t.tex=e.createTexture()),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,!0),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r),e.generateMipmap(e.TEXTURE_2D),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),t.dim=[r.width,r.height]}else console.warn(`Trying to call store.setData on none-existing key: "${e}"`);r.close()}}replace(e="",r=""){if(e!=r)return this.textures.has(e)&&this.textures.get(e).decre()&&this.textures.delete(e),this.add(r)}clear(){for(const[e,r]of[...this.textures.entries()])r.persist||(r.destroy(),this.textures.delete(e))}}},{}],12:[function(e,r){r.exports.pick=e=>e[~~(Math.random()*e.length)],r.exports.makeProgram=(e,r,t)=>{const a=e.createShader(e.VERTEX_SHADER),s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(a,r),e.shaderSource(s,t),e.compileShader(a),e.compileShader(s);const n=e.createProgram();if(e.attachShader(n,a),e.attachShader(n,s),e.linkProgram(n),!e.getProgramParameter(n,e.LINK_STATUS))throw console.error(`vs info-log: ${e.getShaderInfoLog(a)}\n`+`info-log: ${e.getShaderInfoLog(s)}`),new Error(`prog link failed: ${e.getProgramInfoLog(n)}`);return n};const t=[[255,0,0],[255,128,0],[255,255,0],[128,255,0],[0,255,0],[0,255,128],[0,255,255],[0,128,255],[127,0,255],[255,0,255],[255,0,127]].map(e=>e.map(e=>e/255));r.exports.getColor=e=>t[e%t.length]},{}],13:[function(e,r){r.exports=class{constructor(){this.setBuffer()}setBuffer(e){e||(self.SharedArrayBuffer?e=new SharedArrayBuffer(8):e=new ArrayBuffer(8)),this.sharedBuffer=e,this.buffer=new Int32Array(this.sharedBuffer)}get width(){return Atomics.load(this.buffer,0)}set width(e){Atomics.store(this.buffer,0,e)}get height(){return Atomics.load(this.buffer,1)}set height(e){Atomics.store(this.buffer,1,e)}}},{}],14:[function(e,r){r.exports=class{constructor(e){this.renderer=e}async load(e=1024){if(this.loading||this.instance)return!1;this.loading=!0;const r=await fetch("/static/wasm/client.wasm"),t=new WebAssembly.Memory({initial:e,maximum:e});return this.instance=await WebAssembly.instantiate(await WebAssembly.compile(await r.arrayBuffer()),{env:{memory:t,log_add_packet:(e,r,t,a,s)=>{console.log("Add Packet: ",{id:e,type:r,x:t,y:a,size:s})}}}),this.buffer=t.buffer,this.HEAPU8=new Uint8Array(t.buffer),this.HEAPU16=new Uint16Array(t.buffer),this.HEAPF32=new Float32Array(t.buffer),this.HEAPU32=new Uint32Array(t.buffer),this.loading=!1,!0}}},{}]},{},[7]);